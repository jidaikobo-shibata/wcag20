<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE spec
  SYSTEM "xmlspec.dtd">
<spec status="int-review" w3c-doctype="review" role="editors-copy"><header><title>クライアント・サイド・スクリプティングの実装方法</title><w3c-designation>WD-WCAG20-CSS-TECHS</w3c-designation><w3c-doctype>W3C Working Draft</w3c-doctype><pubdate><day/><month/><year>2007</year></pubdate><publoc>
      <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/WAI/GL/sources/script-tech-src.xml">http://www.w3.org/WAI/GL/sources/script-tech-src.xml</loc>
    </publoc><latestloc><loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/WAI/GL/sources/script-tech-src.xml">http://www.w3.org/WAI/GL/sources/script-tech-src.xml</loc></latestloc><authlist><author><name>Becky Gibson, IBM</name></author></authlist><status><p/></status><abstract><p>This document is part of a series of documents published by the W3C
Web Accessibility Initiative (WAI) to support WCAG 2.0.</p></abstract><langusage><language id="ja"/></langusage><revisiondesc><p/></revisiondesc></header><body><!-- techniques --><div1 id="client-side-script"><head>クライアント・サイド・スクリプティングの実装方法</head><technique id="SCR1"><short-name>利用者が初期設定の制限時間を延長できるようにする</short-name><applicability><p>クライアントサイドスクリプトによりコントロールされた制限時間。</p></applicability><applies-to><success-criterion idref="time-limits-required-behaviors"/></applies-to><description><p>この実装方法の目的は、スクリプトがデフォルトの制限時間のある機能を提供する際、その時間を延長するメカニズムを提供することによって、利用者がデフォルトの制限時間を延長できるようにすることである。利用者がより長い制限時間を要求できるようにするために、利用者がより長い制限時間を入力できる、又は
より多くの時間を必要としていることを示す（例えば）フォームをスクリプトが提供することができる。制限時間が切れそうであることを利用者に警告する場合（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="SCR16.html">SCR16: 制限時間が切れようとしていることを利用者に警告するスクリプトを提供する</loc>を参照）、このフォームを警告のダイアログから利用可能にする。どれぐらいの追加時間が必要かを示すことができるようにするか、繰り返し制限時間を延長できるようにすることによって、利用者はデフォルトの制限時間を少なくとも10倍延長することができる。</p></description><examples/><resources><see-also/></resources><related-techniques><relatedtech idref="SCR16"/></related-techniques><tests><procedure><olist><item><p>制限時間がスクリプトで設定されているウェブページで、制限時間が切れるまで待つ。</p></item><item><p>制限時間を延長する選択肢が提供されている。</p></item></olist></procedure><expected-results><ulist><item><p>
2.を満たしていて、かつインタラクションを完了するために更なる時間が提供されている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR1.html">SCR1: Allowing the user to extend the default time limit&#xD;
（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://jp.fujitsu.com">富士通株式会社</loc>,<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://jp.fujitsu.com/group/fdl/">富士通デザイン株式会社</loc></item></ulist></translationcredit></technique><technique id="SCR2"><short-name>キーボード及びマウスのイベント・ハンドラを両方とも用いる</short-name><applicability><p>スクリプトをサポートしているHTML及びXHTML</p></applicability><applies-to><success-criterion idref="keyboard-operation-keyboard-operable"/><success-criterion idref="keyboard-operation-all-funcs"/></applies-to><description><p>この実装方法の目的は、マウスやフォーカスのイベントによって装飾画像が変化する、機器に依存しないイベントの使い方を説明することである。<code><![CDATA[onmouseover]]></code>やonmouseoutイベントを使って、マウスがページ中のある要素に重なるか、又は離れたときに装飾画像が変化するようにする。また、<code><![CDATA[onfocus]]></code>や<code><![CDATA[onblur]]></code>イベントを使って、要素がフォーカスされたか、フォーカスを失ったかによって画像を変更する。</p><p>下記の例では、アンカー要素の前に装飾画像がある。利用者がアンカータグにマウスオーバーすると、アンカータグの前の装飾画像が変化する。また、マウスがアンカーを離れると、画像は元に戻る。同じ画像の変化は、利用者がキーボードを使ってアンカー要素にフォーカスしたときにも起こる。フォーカスされたときに画像が変化し、フォーカスを失ったときには元の画像に戻る。これは、アンカー要素に<code><![CDATA[onmouseover]]></code>、<code><![CDATA[onmouseout]]></code>、<code><![CDATA[onfocus]]></code>及び<code><![CDATA[onblur]]></code>イベント・ハンドラを付加することで実現できる。このイベント・ハンドラはJavaScriptの関数でupdateImage()と呼ばれており、画像のsrc属性を変更する。updateImage()はonmouseover、onmouseout、onfocus、及びonblurイベントの応答として呼ばれる。</p><p>それぞれの画像には固有のIDが与えられている。このIDはどちらの画像が使われるかを表す論理値とともに、updateImage()に渡される:<code><![CDATA[updateImage(imgId, isOver);]]></code>。論理値trueは、マウスがアンカー要素に乗った場合、又はそれがフォーカスされた場合に渡される。falseは、マウスがアンカー要素から離れた場合、又はそれがフォーカスを失った場合に渡される。 updateImage()関数は、画像のIDを使用して画像を読み込み、その後に論理値の状態に応じてsrc属性を変更する。画像は装飾目的で使用されているので、alt属性値は空であることに注意する。</p><note><p class="prefix">サイズの近い画像を使用し、画像要素では幅と高さの属性値を指定することが望ましい。これは、画像が更新されることによりページのレイアウトが変化してしまうことを防ぐ。例では、同一サイズの画像が使用されている。</p></note></description><examples><eg-group><code><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  "http://www.w3.org/TR/html4/loose.dtd">
 <html lang="ja">
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 <title>デバイス非依存な手法で画像を変化させる</title>
 <script type="text/javascript">
 /* このfunctionは、img要素のsrc属性値を変更する。
  * param imgId - 変更する画像オブジェクトのID
  * param isOver - true：マウスオーバーしたとき、又はオブジェクトがフォーカスを受け取ったとき
  *                false：マウスオーバーを外したとき、又はフォーカスを外したとき
 */
 function updateImage(imgId, isOver) {
   var theImage = document.getElementById(imgId);
   if (theImage != null) { //could use a try/catch block for user agents supporting at least JavaScript 1.4
                           // These browsers support try/catch - NetScape 6, IE 5, Mozilla, Firefox
      if (isOver) {
        theImage.setAttribute("src","yellowplus.gif");
      }
      else {
        theImage.setAttribute("src","greyplus.gif");
      }
   }
 }
 </script>
 </head>
 <body>
 <p>次のリンクにマウスオーバーするか、タブ移動でフォーカスを移動させ、
 画像が変化するか確認してください。</p>
 <a href="http://www.w3.org/wai" onmouseover="updateImage('wai', true);" onfocus="updateImage('wai', true);"
   onmouseout="updateImage('wai',false);" onblur="updateImage('wai',false);">
 <img src="greyplus.gif" border="0" alt="" id="wai">
   W3C Web Accessibility Initiative</a> &
 <a href="http://www.w3.org/International/" onmouseover="updateImage('i18n', true);" 
   onfocus="updateImage('i18n',true);" onmouseout="updateImage('i18n',false);"
   onblur="updateImage('i18n',false);">
   <img src="greyplus.gif" border="0" alt="" id="i18n">
   W3C Internationalization</a>
 </body>
 </html>]]></code></eg-group></examples><resources/><related-techniques/><tests><procedure><p>ウェブページを読み込み、マウス及びキーボードを用いてイベントを検証する。</p><olist><item><p>ウェブページが読み込まれたとき、“通常の”画像が期待通りに表示されている。</p></item><item><p>マウスを使用</p><olist><item><p>イベント・ハンドラを含む要素の上にマウスを移動する（この事例ではアンカー要素）。元の画像が期待されている画像に変化する。</p></item><item><p>マウスを要素から外す。画像が“通常の”画像に戻る。</p></item></olist></item><item><p>キーボードを使用</p><olist><item><p>キーボードを使ってイベント・ハンドラを含む要素にフォーカスを設定する。元の画像が期待されている画像に変化する。</p></item><item><p>キーボードを使って要素からフォーカスを外す（一般的には別の要素にフォーカスを移す）。イメージが元の“通常の画像”に戻る。</p></item></olist></item><item><p>画像の変更によって、ページ上の他の要素のレイアウトに影響がないかを確認する。</p></item></olist></procedure><expected-results><ulist><item><p>上記の全てを満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR2.html">SCR2: Using redundant keyboard and mouse event handlers（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：辻 勝利（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp//">株式会社ミツエーリンクス</loc>）</item></ulist></translationcredit></technique><technique id="SCR14"><short-name>スクリプトを用いて、不可欠ではないアラートの表示を任意にする</short-name><applicability><p>緊急ではない情報提供のアラートにスクリプトを使用するウェブコンテンツ技術</p></applicability><applies-to><success-criterion idref="time-limits-postponed"/></applies-to><description><p>この実装方法の目的は、メッセージ(アラート)を含むダイアログを利用者に表示することである。アラートが表示されたとき、それがフォーカスされると、利用者はそれを閉じるためにダイアログのOKボタンを押さなければならない。これらのアラートにフォーカスが移ってしまうと、特に、緊急ではない情報に使用されたとき、利用者の気が散ってしまうかもしれない。今日の名言、役に立つ小技、又は特定のイベントまでのカウントダウンなど、緊急ではない目的のアラートは、利用者がウェブページに提供された選択肢でそれらを有効にすることなしには現れないようにする。</p><p>この実装方法では、アラートを表示するかどうかの利用者の選択を保存するJavaScriptのグローバル変数に割り当てる。初期値はfalseにする。 ラッパー関数は、アラートを表示する前にこの変数の値をチェックするために作成される。alert() 関数を直接呼び出すよりもむしろ、アラートを表示するすべての呼び出しをこのラッパー関数にかけるようにする。ページの上部には、ページでのアラートの表示を利用者が有効にするためのボタンを提供する。この実装方法は訪問ベースで1回の訪問ごとに作動する。ページが読みこまれるたび、アラートは無効にされ、利用者は手動でそれらを有効にしなければならない。あるいは、コンテンツ制作者は、利用者の選択をセッションを越えて保存するためにクッキーを使用することができる。</p></description><examples><eg-group><description><p>以下のスクリプトは、利用者が「アラートを利用する」というボタンを選択するなら、10秒ごとにアラートボックスに名言を表示する。利用者は再び「アラートを利用しない」を選択することで、名言のアラートボックスを非表示にすることができる。</p></description><code><![CDATA[<script type="text/javascript">
var bDoAlerts = false;  // アラートを表示するかどうか指定するグローバル変数
/* アラートを有効／無効にする関数。
 * param ブーリアン型 bOn - trueでアラートを有効、falseで無効。
*/
function modifyAlerts(isEnabled) {
   bDoAlerts = isEnabled;
}
/* アラート表示のラッパー関数。bDoAlertsの値をチェックし
* bDoAlertsがtrueのときに alert() 関数を呼び出すだけ。
*/
function doAlert(aMessage) {
    if (bDoAlerts) {
       alert(aMessage);
    }
}
// 例 - 名言を表示するループ。
var gCounter = -1;  // カウンタを保存するグローバル変数
// quotes変数は名言のリストで初期化される
var quotes = new Array("quote 1", "quote 2", "quote 3", "quote 4", "quote 5");
function showQuotes() {
   if (++gCounter &gt;= quotes.length) {★「&gt;」は「>」ではないでしょうか？★
     gCounter = 0;
   }
   doAlert(quotes[gCounter]);
   setTimeout("showQuotes();", 10000);
}
showQuotes();
</script>]]></code><description><p>ページの本文内には、アラートを有効にしたり無効する方法を含める。以下はひとつの例である：</p></description><code><![CDATA[<body>
<p>アラートボックスを使用した名言の表示を有効にするには、以下のボタンを押してください。<br />
<button id="enableBtn" type="button" onclick="modifyAlerts(true);">
アラートを利用する</button><br />
<button id="disableBtn" type="button" onclick="modifyAlerts(false);">
アラートを利用しない</button></p>]]></code><description><p>このコードを実装したサンプル： <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="working-examples/SCR14/enablealerts.html">アラートの実装例</loc></p></description></eg-group></examples><resources/><related-techniques/><tests><procedure><p>JavaScriptを使用した緊急ではないアラートをサポートするウェブページにおいて：</p><olist><item><p>ウェブページを読み込んだ際、緊急ではないアラートが表示されない。</p></item><item><p>緊急ではないアラートを有効にするメカニズムがある。</p></item><item><p>緊急ではないアラートを有効にすると、アラートが表示される。</p></item></olist></procedure><expected-results><ulist><item><p>上記の全てを満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR14.html">SCR14: Using scripts to make nonessential alerts optional（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://storywriter.jp/">羽山 祥樹</loc></item></ulist></translationcredit></technique><technique id="SCR16"><short-name>制限時間が切れようとしていることを利用者に警告するスクリプトを提供する</short-name><applicability><p>スクリプトによって制御された制限時間</p></applicability><applies-to><success-criterion idref="time-limits-required-behaviors"/></applies-to><description><p>この実装方法の目的は、インタラクションを完了させるための時間がほとんど無いことを利用者に通知することである。スクリプトによって、時間制限のある機能が提供される場合には、そのスクリプトは利用者に制限時間が迫っていることを警告する機能を含み、より多くの時間を要求するためのメカニズムを提供することができる。制限時間の20秒以上前に、そのスクリプトは制限時間が迫っている事を伝え、利用者がさらに時間を必要とするかどうかを尋ねる確認ダイアログを提供する。もし利用者の答えが「はい」の場合、制限時間をリセットする。もし利用者の答えが「いいえ」又は返答がない場合、制限時間の終了を許可する。</p><p>この実装方法は、<code><![CDATA[window.setTimeout()]]></code>メソッドで設定された制限時間に関係する。例えば、60秒で制限時間が切れる設定の場合、制限時間を40秒に設定して、確認ダイアログを表示させることができる。確認ダイアログが表示された時、新しく時間制限が残り20秒に設定される。「制限時間の猶予期間」の満了時に、当初の設計では60秒の制限時間の満了の時にとられていたであろう処置がとられる。</p></description><examples><eg-group><description><p>ある株式市場相場ページは最新の統計を利用可能な状態を確保するため5分毎にページを更新するスクリプトを使用している。その5分間が終了する20秒前に、確認ダイアログが表示され、利用者がページを更新する前にもっと時間が必要かどうかを尋ねる。これにより、利用者に更新が差し迫っていることを認識させるとともに、もし希望するならそれを回避できるようにする。</p></description><code><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"<url>http://www.w3.org/TR/html4/loose.dtd">http://www.w3.org/TR/html4/loose.dtd</title>">
<html lang="ja">
<head>

<title>株式相場市況</title>
<script type="text/javascript">
<!--
function timeControl() {
	// タイマーを4分40秒に設定し、利用者に確認を求める
	setTimeout('userCheck()', 280000);
}
function userCheck() {
	// ページの再読み込みを20秒に設定する
	var id=setTimeout('pageReload()', 20000);
	// 利用者が「OK」を選択した場合、タイマーがリセットされる
	// それ以外の場合、サーバーによりページが再読み込みされる
	if (confirm("このページは20秒後に再読み込みされるように設定されています。
	それ以上の時間が必要ですか？"))
	{
	clearTimeout(id);
	timeControl();
	}
}
function pageReload() {
	window.location.reload(true);
}
timeControl();
-->
</script>
</head>
<body>
<h1>株式相場市況</h1>

...その他のコンテンツ...
</body>
</html>]]></code></eg-group></examples><resources/><related-techniques><relatedtech idref="SCR1"/></related-techniques><tests><procedure><p>スクリプトによって時間制限を制御しているウェブページにおいて：</p><olist><item><p>ページを読み込み、制限時間より20秒少ないタイマーを開始する。</p></item><item><p>タイマーが切れるとき、差し迫った時間制限を警告する確認ダイアログが表示されることを確認する。</p></item></olist></procedure><expected-results><ulist><item><p>2.を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR16.html">SCR16: Providing a script that warns the user a time limit is about to expire（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：中村 浩佳（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp//">株式会社ミツエーリンクス</loc>）</item></ulist></translationcredit></technique><technique id="SCR18"><short-name>クライアントサイドのバリデーション及びアラートを提供する</short-name><applicability><p>利用者の入力を検証するコンテンツ</p></applicability><applies-to><success-criterion idref="minimize-error-identified"/><success-criterion idref="minimize-error-suggestions"/><success-criterion idref="minimize-error-reversible"/></applies-to><description><p>この実装方法の目的は、クライアントサイドのスクリプトによって、各フィールドで利用者が入力する値を確認することである。エラーが見つかった場合、警告ダイアログを表示し、エラーの内容をテキストで示す。警告ダイアログを閉じるとともに、スクリプトによってキーボードフォーカスをエラーが起こったフィールドに移動させれば、それは利用者にとって役立つ。</p></description><examples><eg-group><description><p>以下のスクリプトは、有効な日付がフォームのコントロールに入力されたかをチェックする。</p></description><code><![CDATA[<label for="date">日付：</label>
<input type="text" name="date" id="date" 
onchange="if(isNaN(Date.parse(this.value))) 
alert('alert('このコントロールは日付が正しくありません。値を再び入力してください。');" />]]></code></eg-group></examples><resources/><related-techniques><relatedtech idref="G89"/></related-techniques><tests><procedure><p>特定の入力を必要とするフォームのフィールドに対して：</p><olist><item><p>無効なデータを入力する。</p></item><item><p>エラーを説明している警告が提供されている。</p></item></olist></procedure><expected-results><ulist><item><p>2.を満たしている</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR18.html">SCR18: Providing client-side validation and alert（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：中村 浩佳（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp//">株式会社ミツエーリンクス</loc>）</item></ulist></translationcredit></technique><technique id="SCR19"><short-name>状況の変化を引き起こすことのないように、select要素のonchangeイベントを用いる</short-name><applicability><p>スクリプトをサポートするHTML及びXHTML。この実装方法では、JavaScript 1.4 の try/catch 構文を用いる。</p></applicability><applies-to><success-criterion idref="consistent-behavior-no-extreme-changes-context"/></applies-to><ua-issues><ua-issue><p>この実装方法は、Firefox1.5とIE6の両方で、JAWS 7.0とWindowEyes 5.5を使用したWindows XPで検証されている。ブラウザでJavaScriptを有効にしなければならないことに注意する。</p></ua-issue></ua-issues><description><p>この実装方法の目的は、ウェブページの他の要素を更新するselect要素においてonchangeイベントを正しく使用する方法を示すことである。この実装方法は、状況の変化を引き起こさない。ウェブページに一つかそれ以上のselect要素があるとき、一方のonchangeイベントは、そのウェブページの別のselect要素における選択肢を更新できる。そして、select要素によって必要とされるデータのすべてが、ウェブページの中に含まれている。</p><p>ウェブページでの音声読み上げ順序において、選択によって変更されるアイテムが、トリガーとなるselect要素の後にあることに注意することが重要である。これは、支援技術が変化を察知するのを確実にし、変更されたアイテムがフォーカスされたとき、利用者は新しいデータを認識する。なお、この実装方法は、ユーザーエージェントによるJavaScriptのサポート状況に依存する。</p></description><examples><eg-group><description><p>この事例には、2つのselect要素がある。最初のselect要素でアイテムが選択されたとき、二つめのselect要素の選択肢が適切に更新される。最初のselect要素には、大陸のリストがある。そして、二つめのselect要素には、選択された大陸に位置する国々の一部のリストがある。onchangeイベントは、大陸の選択に連動している。大陸の選択が変わると、国の選択肢は、ドキュメント・オブジェクト・モデル(DOM)を通してJavaScriptを用いて変更される。必要であるすべてのデータ、国と大陸のリスト、はウェブページの中に含まれている。</p><p>以下のコードの概要：</p><ulist><item><p>トリガーとなるselect要素の大陸ごとの国々のリストを含むcountryLists配列
                                    </p></item><item><p>大陸のselect要素のonchangeイベントによって呼ばれるcountryChange() 関数</p></item><item><p>ウェブページの本文のselect要素を作成するXHTMLコード</p></item></ulist></description><code><![CDATA[<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"> 
  <head> 
    <meta http-equiv="content-type" content="text/xhtml; charset=utf-8" /> 
    <title>動的なセレクトメニュー</title> 

<script type="text/javascript">
 //<![CDATA[ 
 // 国の選択項目のリストに現れるのと同じ順の選択可能な国の配列 
 var countryLists = new Array(4) 
 countryLists["empty"] = ["国を選択してください"]; 
 countryLists["North America"] = ["カナダ", "アメリカ合衆国", "メキシコ"]; 
 countryLists["South America"] = ["ブラジル", "アルゼンチン", "チリ", "エクアドル"]; 
 countryLists["Asia"] = ["ロシア", "中国", "日本"]; 
 countryLists["Europe"]= ["イギリス", "フランス", "スペイン", "ドイツ"]; 
 /* CountryChange() はselect要素のonchangeイベントから呼び出される。 
 * param selectObj - onchangeイベントで生成されるselectオブジェクト。
 */ 
 function countryChange(selectObj) { 
 // 選択された選択肢のインデックスを得る 
 var idx = selectObj.selectedIndex; 
 // 選択された選択肢の値を得る 
 var which = selectObj.options[idx].value; 
 // countryLists 配列から項目のリストを検索するために選択された選択肢の値を使う 
 cList = countryLists[which]; 
 // そのIDを通して国のselect要素を得る
 var cSelect = document.getElementById("country"); 
 // 国のリストから現在の選択肢を削除する 
 var len=cSelect.options.length; 
 while (cSelect.options.length > 0) { 
 cSelect.remove(0); 
 } 
 var newOption; 
 // 新しい選択肢を生成する 
 for (var i=0; i<cList.length; i++) { 
 newOption = document.createElement("option"); 
 newOption.value = cList[i];  // 選択肢の文字列と値は同じとする 
 newOption.text=cList[i]; 
 // 新しい選択肢を追加する 
 try { 
 cSelect.add(newOption);  // これはDOMをサポートするブラウザでは失敗するが、IEには必要 
 } 
 catch (e) { 
 cSelect.appendChild(newOption); 
 } 
 } 
 } 
//]]]]><![CDATA[>
</script>
</head>
<body>
  <noscript>このページはJavaScriptが有効で、関数が正しく動作可能である必要があります。</noscript>

  <h1>動的なセレクトメニュー</h1>
  <label for="continent">大陸を選択</label>
  <select id="continent" onchange="countryChange(this);">
    <option value="empty">大陸を選択してください</option>

    <option value="North America">北米</option>
    <option value="South America">南米</option>
    <option value="Asia">アジア</option>
    <option value="Europe">ヨーロッパ</option>

  </select>
  <br/>
  <label for="country">国を選択</label>
  <select id="country">
    <option value="0">国を選択してください</option>

  </select>
</body>
 </html>]]></code><description><p>このコードの実装サンプル：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="working-examples/SCR19/dynselect.html">動的なセレクトメニュー</loc>
              
                     </p></description></eg-group></examples><resources><see-also><ulist><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.usability.com.au/resources/wcag2/">Accessible Forms using WCAG 2.0</loc>
          </p></item></ulist></see-also></resources><related-techniques/><tests><procedure><olist><item><p>トリガーとなるselect要素(この事例では、大陸を選択するセレクトメニュー)で、選択肢の値を変える。</p></item><item><p>トリガーによって更新されたselect要素(この事例では、国を選択するセレクトメニュー)へ移動する。</p></item><item><p>適切な選択肢の値が、2. のselect要素に表示されている。</p></item><item><p>選択肢の値を変えることなく、1. のトリガーとなるselect要素へ移動する。</p></item><item><p>適切な選択肢の値が、関連付けられた要素（2. のselect要素）にまだ表示されている。</p></item></olist><p>関連付けられた要素（2. のselect要素）の変化が認識されることを確かめるために、select要素を支援技術を用いて検証することが望ましい。</p></procedure><expected-results><ulist><item><p>3. 及び 5. を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR19.html">SCR19: Using an onchange event on a select element without causing a change of context（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://storywriter.jp/">羽山 祥樹</loc></item></ulist></translationcredit></technique><technique id="SCR20"><short-name>キーボードとその他のデバイス特有の機能を両方とも用いる</short-name><applicability><p>機能を実装するためにスクリプトを用いる全てのコンテンツ</p></applicability><applies-to><success-criterion idref="keyboard-operation-keyboard-operable"/><success-criterion idref="keyboard-operation-all-funcs"/></applies-to><description><p>この実装方法の目的は、イベントと関連付けられたスクリプト機能を含むコードを伴った、キーボード固有及びマウス固有のイベント双方の使用を明示することである。キーボード固有及びマウス固有のイベントを一緒に用いることにより、さまざまな種類の機器でコンテンツを操作できることを保証することができる。例えば、スクリプトがkeypressを認識したときに、マウスボタンをクリックしたときと同じ動作を行うことができるようにする。このテクニックにより、キーボードによるアクセスだけでなく他の機器によるアクセスの達成基準を満たすことができる。</p><p>JavaScriptでよく使用されるイベント・ハンドラには、onblur、onchange、onclick、ondblclick、onfocus、onkeydown、onkeypress、onkeyup、onload、onmousedown、onmousemove、onmouseout、onmouseover、onmouseup、onreset、onselect、onsubmit、onunloadが含まれる。いくつかのマウス固有の機能には、論理的に対応するキーボード固有の機能がある（例えば'onmouseover'と'onfocus'のように）。キーボード向けのイベント・ハンドラは、対応するマウス向けの機能とともに提供すべきである。</p><p>次の表は、マウスイベント・ハンドラに対応するキーボードイベント・ハンドラの候補である。</p><table border="1" cellspacing="0"><caption>
				対応表
				</caption><tbody><tr><th scope="col" rowspan="1" colspan="1">マウス向け</th><th scope="col" rowspan="1" colspan="1">キーボード向け</th></tr><tr><td rowspan="1" colspan="1">
<code><![CDATA[mousedown]]></code> </td><td rowspan="1" colspan="1">
<code><![CDATA[keydown]]></code> </td></tr><tr><td rowspan="1" colspan="1">
<code><![CDATA[mouseup]]></code> </td><td rowspan="1" colspan="1">
<code><![CDATA[keyup]]></code> </td></tr><tr><td rowspan="1" colspan="1">
<code><![CDATA[click ]]></code> <sup>[1]</sup>
</td><td rowspan="1" colspan="1">
<code><![CDATA[keypress ]]></code> <sup>[2]</sup>
</td></tr><tr><td rowspan="1" colspan="1">
<code><![CDATA[mouseover]]></code> </td><td rowspan="1" colspan="1">
<code><![CDATA[focus]]></code> </td></tr><tr><td rowspan="1" colspan="1">
<code><![CDATA[mouseout]]></code> </td><td rowspan="1" colspan="1">
<code><![CDATA[blur]]></code> </td></tr></tbody></table><p><sup>1</sup>clickは基本的にはマウスのイベント・ハンドラであるが、ほとんどのHTML及びXHTML向けのユーザーエージェントは、そのコントロールがマウス又はキーボードのどちらで有効化されたかにかかわらず、イベントを処理することができる。そのためこのイベントについては、実際にはキーボード用のイベントを補完する必要はない。ここに含まれているのは、HTML以外のユーザーエージェントで問題があるときのためである。</p><p><sup>2</sup>keypressイベント・ハンドラは、どのキーに対しても有効であることから、そのイベント・ハンドラ関数では、イベントを処理する前に、Enterキーが押されたかどうかをチェックすべきである。そうでなければ、イベント・ハンドラは利用者が任意のキーを押すたびに実行され、コントロールから抜けるためにTabキーを押すような場合にも実行されるので、通常は望ましくない。</p><p>（<code><![CDATA[dblclick]]></code>及び<code><![CDATA[mousemove]]></code>のような）いくつかのマウス固有の機能には、対応するキーボード固有の機能がない。つまり、いくつかの機能は機器別に違った実装をしなければならないということである（例えば、実装されているマウス固有の機能と同等の機能を、キーボードから実行するための一連のボタン操作を含むようにする）。</p></description><examples><eg-group><description><p>この画像リンクの例では、利用者がポインタを画像に重ねると画像が変化する。キーボード利用者に同様の体験を提供するには、利用者が画像リンクにTabキーで移動した場合に、画像を変化させればよい。</p></description><code><![CDATA[<a href="menu.php" onmouseover="swapImageOn('menu')" onfocus="swapImageOn('menu')" 
onmouseout="swapImageOff('menu')" onblur="swapImageOff('menu')"> 
<img id="menu" src="menu_off.gif" alt="メニュー" /> 
</a>]]></code></eg-group><eg-group><description><p>この事例では、マウスとキーボードの両方を用いて機能を実行できる画像のカスタム・コントロールを紹介している。マウスイベントの<code><![CDATA[onclick]]></code>は、対応するキーボードイベントの<code><![CDATA[onkeypress]]></code>によって補完されている。<code><![CDATA[tabindex]]></code>属性は、キーボードを用いてTabキーで移動した際に、画像の上で停止させるためのものである。この事例では<code><![CDATA[nextPage()]]></code>関数が、キーボードのキー押下がEnterキーであるかどうかをチェックしていることに注目してほしい。もしチェックしなければ、画像にフォーカスがあるときには、どのキーが押下されても常に反応してしまうため望ましくない。</p></description><code><![CDATA[<img onclick="nextPage();" onkeypress="nextPage();" tabindex="0" src="arrow.gif" 
alt="次のページへ移動">]]></code><description><note><p class="prefix">この例では<code><![CDATA[img]]></code>要素にtabindexを用いている。現時点では（文法的に）妥当ではないが、この機能を実装するための古典的なテクニックとして用いられている。このようなカスタム・コントロールでは、コントロールの役割（role）と状態（state）を支援技術に引き渡すためにWAI-ARIAも用いるべきである。</p></note></description></eg-group></examples><resources><see-also><ulist><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.webaim.org/techniques/javascript/">Overview of Creating Accessible JavaScript</loc>
          </p></item></ulist></see-also></resources><related-techniques><relatedtech idref="G90"/></related-techniques><tests><procedure><olist><item><p>全てのインタラクティブな機能を探す。</p></item><item><p>それらのインタラクティブな機能全てに、キーボードだけを使ってアクセスできる。</p></item></olist></procedure><expected-results><ulist><item><p>2.を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR20.html">SCR20: Using both keyboard and other device-specific functions（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：辻 勝利<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp//">（株式会社ミツエーリンクス）</loc></item><item>修正：2012年4月25日（情報通信アクセス協議会「<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.ciaj.or.jp/access/web/activities/wg2/">ウェブアクセシビリティ基盤委員会（WAIC） 実装ワーキンググループ（WG2）</loc>」）</item></ulist></translationcredit></technique><technique id="SCR21"><short-name>DOM（ドキュメント・オブジェクト・モデル）を用いて、ページにコンテンツを追加する</short-name><applicability><p>HTML及びXHTMLの中で利用されるECMAScript</p></applicability><applies-to><success-criterion idref="content-structure-separation-programmatic"/><success-criterion idref="ensure-compat-rsv"/></applies-to><ua-issues><ua-issue><p>この例は、Windows XP上のIE 6とFirefox 1.5.0.1において、JAWS 7とWindow-Eyes 5.5の両方で正常にテストされた。ページ内に新しいコンテンツが追加されたとき、スクリーンリーダーはそれを自動的に読み上げないことに注意しなければならない。新しいコンテンツを確実に読み上げさせるには、新しい要素にフォーカスを与えるか、又は現在位置よりもあとに追加して、ユーザーがページを読み進めていく際に気がつけるようにする。</p></ua-issue></ua-issues><description><p>この実装方法の目的は、<code><![CDATA[document.write]]></code>又は<code><![CDATA[object.innerHTML]]></code>の代わりにDocument Object Model (DOM)の機能を用いて、ページ中にコンテンツを追加することである。<code><![CDATA[document.write()]]></code>メソッドはXHTMLで正しいMIMEタイプ(application/xhtml+xml)が指定されているときに動作せず、<code><![CDATA[innerHTML]]></code>プロパティはDOMの仕様ではないため利用すべきでない。もしDOMの機能を利用してコンテンツを追加すれば、ユーザーエージェントはDOMにアクセスしてコンテンツを取り込むことができる。<code><![CDATA[createElement()]]></code>関数を使ってDOMの中に要素を作成することもできる。<code><![CDATA[createTextNode()]]></code>は要素に関連付けられたテキストを作成するのに用いられる。<code><![CDATA[appendChild()]]></code>、<code><![CDATA[removeChild()]]></code>、<code><![CDATA[insertBefore()]]></code>及び<code><![CDATA[replaceChild()]]></code>関数は、要素やノードを追加したり削除したりするのに用いられる。その他のDOM関数は、作成された要素に属性を与えるときに使用される。</p><note><p class="prefix">フォーカス可能な要素を文書に追加するとき、<code><![CDATA[tabindex]]></code>属性を用いて明示的なタブ順序を指定してはならない。なぜなら、文書の中央にフォーカス可能な要素を追加するときに問題が発生するからである。<code><![CDATA[tabindex]]></code>属性を明示的に設定しないことで、デフォルトのタブ順序が新しい要素に割り当てられるようにする。</p></note></description><examples><eg-group><description><p>この例では、クライアントサイドスクリプトの使用法として、フォームの検証方法を紹介している。もしエラーがみつかれば、適切なエラーメッセージが表示される。この例ではDOM関数を使用し、タイトル、エラーに関する短い説明、及びエラー一覧の順序付リストを含むエラー通知を追加している。タイトルの内容はリンクとして書かれているので、focusメソッドを使って利用者の注意をエラーに向けることができる。個別のリスト項目もまた、リンクとして書かれているので、そのリンク先に移動したときにエラーのあるフォームのフィールドにフォーカスできるように書かれている。</p><p>この例では、簡単にするために二つのテキストフィールドだけを検証しているが、一般的なフォームハンドラにするために容易に拡張することができる。クライアントサイドの検証は、それを唯一の検証とすべきではなく、サーバーサイドの検証でも確認するべきである。クライアントサイドでの検証の利点は、利用者にすぐにフィードバックを提供することで、サーバーからエラーが帰ってくるまでの間、彼らを待たせることがないこと、及びサーバーへの余計なトラフィックを軽減できることである。</p><p>次の例はフォームにイベント・ハンドラを追加するスクリプトである。もしスクリプトが有効であれば、サーバーにフォームが送信される前にvalidateNumbers()関数がクライアントサイドの検証のために呼び出される。もしスクリプトが有効でなければ、フォームはすぐにサーバー側に送信されるので、検証機能はサーバーにも実装されるべきである。</p></description><code><![CDATA[window.onload = initialise;
function initialise()
{
  // 標準に準拠したユーザーエージェントが対象
  if (!document.getElementById || !document.createElement || !document.createTextNode)
    return;

  // フォームにイベントハンドラを付加
  var objForm = document.getElementById('numberform');
  objForm.onsubmit= function(){return validateNumbers(this);};
}]]></code><description><p>次の例はvalidationの機能である。エラーメッセージの要素を作成するためにcreateElement()、createTextNode()、及びappendChild() DOM関数を使用しているところに注目して欲しい。</p></description><code><![CDATA[function validateNumbers(objForm)
{
  // フィールドを検証
  var bFirst = isNumber(document.getElementById('num1').value);
  var bSecond = isNumber(document.getElementById('num2').value);
  // 問題がある場合、エラーを表示
  if (!bFirst || !bSecond)
  {
    var objExisting = document.getElementById('validationerrors');
    var objNew = document.createElement('div');
    var objTitle = document.createElement('h2');
    var objParagraph = document.createElement('p');
    var objList = document.createElement('ol');
    var objAnchor = document.createElement('a');
    var strID = 'firsterror';
    var strError;
    // 見出し要素にリンクを含めることによって、スクリーンリーダーは
    // フォーカスを置くことができる － そのリンク先はエラー一覧の中で 
    // 一番最初のエラー項目とする
    objAnchor.appendChild(document.createTextNode('Errors in Submission'));
    objAnchor.setAttribute('href', '#firsterror');
    objTitle.appendChild(objAnchor);
    objParagraph.appendChild(document.createTextNode('Please review the following'));
    objNew.setAttribute('id', 'validationerrors');
    objNew.appendChild(objTitle);
    objNew.appendChild(objParagraph);
    // 発見したエラーすべてをエラー一覧に追加
    if (!bFirst)
    {
      strError = '最初の数字には、数値を入力してください。';
      objList.appendChild(addError(strError, '#num1', objForm, strID));
      strID = '';
    }
    if (!bSecond)
    {
      strError = '2番目の数字には、数値を入力してください。';
      objList.appendChild(addError(strError, '#num2', objForm, strID));
      strID = '';
    }
    // エラー情報に一覧を追加
    objNew.appendChild(objList);
    // 既存のエラーがあった場合、新規のエラーと置き換える
    // あるいは、新規のエラーをフォームの先頭に追加する
    if (objExisting)
      objExisting.parentNode.replaceChild(objNew, objExisting);
    else
    {
      var objPosition = objForm.firstChild;
      objForm.insertBefore(objNew, objPosition);
    }
    // フォーカスを見出しにあるアンカーに置いて、スクリーンリーダーに
    // 対してエラーがあることを警告する
    objAnchor.focus();
    // フォームを送信しない
    objForm.submitAllowed = false;
    return false;
  }
  return true;
}

// 数字を検証する関数
function isNumber(strValue)
{
  return (!isNaN(strValue) && strValue.replace(/^\s+|\s+$/, '') !== '');
}]]></code><description><p>以下は、エラーメッセージを作成して、関連するフォームのフィールドにフォーカスさせるための補助関数である。</p></description><code><![CDATA[// エラー内容を説明する、エラーのフォームフィールドへのリンクの
// リスト項目を作成する関数
function addError(strError, strFragment, objForm, strID)
{
  var objAnchor = document.createElement('a');
  var objListItem = document.createElement('li');
  objAnchor.appendChild(document.createTextNode(strError));
  objAnchor.setAttribute('href', strFragment);
  objAnchor.onclick = function(event){return focusFormField(this, event, objForm);};
  objAnchor.onkeypress = function(event){return focusFormField(this, event, objForm);};
  // strIDに値がある場合、これがリストで一番目のエラーとなる
  if (strID.length > 0)
    objAnchor.setAttribute('id', strID);
  objListItem.appendChild(objAnchor);
  return objListItem;
}

// エラーのフォームフィールドにフォーカスを置く関数
function focusFormField(objAnchor, objEvent, objForm)
{
  // キーボードナビゲーションを可能にするAllow keyboard navigation over links
  if (objEvent && objEvent.type == 'keypress')
    if (objEvent.keyCode != 13 && objEvent.keyCode != 32)
      return true;
  // フォーカスをフォーム・コントロールに設定する
  var strFormField = objAnchor.href.match(/[^#]\w*$/);
  objForm[strFormField].focus();
  return false;
}]]></code><description><p>以下は事例のフォーム用HTMLである。</p></description><code><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="ja">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<title>ECMAScript フォームの検証</title>
	<script type="text/javascript" src="validate.js"></script>
</head>
<body>
<h1>フォームの検証</h1>
<form id="numberform" method="post" action="form.php">

<fieldset>
<legend>数字のフィールド</legend>
<p>
<label for="num1">最初の数字を入力</label>
<input type="text" size="20" name="num1" id="num1">
</p>
<p>

<label for="num2">2番目の数字を入力</label>
<input type="text" size="20" name="num2" id="num2">
</p>
</fieldset>
<p>
<input type="submit" name="submit" value="フォームを送信">
</p>
</form>

</body>
</html>]]></code><description><p>この例はクライアントサイドスクリプトに限定しているため、サーバーサイドの検証によって補完されるべきである。例では、クライアントサイドスクリプトが利用できるときのエラーメッセージの作成に限定される。</p><p>このコードの実装サンプル：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/working-examples/SCR21/ex1.html">フォームの検証</loc> </p></description></eg-group></examples><resources><see-also><ulist><item><p>HTML 4.01<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.webreference.com/js/column44/index.html">The Document Object Model, More methods</loc>from Webreference.com</p></item><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.usability.com.au/resources/wcag2/">Accessible Forms using WCAG 2.0</loc>
          </p></item></ulist></see-also></resources><related-techniques/><tests><procedure><p>動的に新しいコンテンツを作成するページに対して：</p><olist><item><p>（ソースコードを検証して、）新しいコンテンツがdocument.write()、innerHTML,、outerHTML、innerText又はouterTextを用いて作成されていない。</p></item></olist></procedure><expected-results><ulist><item><p>1.を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR21.html">SCR21: Using functions of the Document Object Model (DOM) to add content to a page（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：辻 勝利(<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">株式会社ミツエーリンクス</loc>)</item></ulist></translationcredit></technique><technique id="SCR22"><short-name>スクリプトを用いて、点滅を制御し、5秒以内に停止させる</short-name><applicability><p>スクリプトで制御されたコンテンツの点滅をサポートするウェブコンテンツ技術</p></applicability><applies-to><success-criterion idref="time-limits-pause"/></applies-to><description><p>この実装方法の目的は、スクリプトによる点滅を、5秒未満で停止する設定にできるよう制御することである。 スクリプトを用いて、コンテンツの点滅効果を開始し、表示と非表示の状態切り替えを制御し、そして5秒以下で停止させる。<code><![CDATA[setTimeout()]]></code>関数を用いて、点滅するコンテンツの表示と非表示の状態を切り替え、点滅の回数と所要時間の積が5秒近くになった時に停止させる。</p></description><examples><eg-group><description><p>この例では、JavaScriptを用いてHTML及びXHTMLコンテンツの点滅を制御する。JavaScriptは、コンテンツの表示状態を制御して点滅効果を生みだす。効果の開始を制御し、5秒以内に停止させる。</p></description><code><![CDATA[...
<div id="blink1" class="highlight">新商品！</div>
<script type="text/javascript">
<!--
// 点滅「on」状態
function show()
{
	if (document.getElementById)
	document.getElementById("blink1").style.visibility = "visible";
}
// 点滅「off」状態
function hide()
{
	if (document.getElementById)
	document.getElementById("blink1").style.visibility = "hidden";
}
// 点滅効果を出すために「on」と「off」の状態を450ミリ秒ごとに切り替え
// 4500ミリ秒後に終了（5秒未満）
for(var i=900; i < 4500; i=i+900)
{
	setTimeout("hide()",i);
	setTimeout("show()",i+450);
}
-->
</script>
...]]></code><description><p>このコードの実装サンプル：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/working-examples/SCR22/ex1.html">点滅をコントロールするために、スクリプトを使用する</loc></p></description></eg-group></examples><resources/><related-techniques/><tests><procedure><p>点滅しているコンテンツのそれぞれのインスタンスに対して：</p><olist><item><p>点滅効果が開始される時、5秒間のタイマーを開始させる。</p></item><item><p>タイマーが切れるとき、点滅が停止している。</p></item></olist></procedure><expected-results><ulist><item><p>点滅しているコンテンツのそれぞれのインスタンスが2.を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR22.html">SCR22: Using scripts to control blinking and stop it in five seconds or less（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.hitachi.co.jp/design/index.html">株式会社日立製作所デザイン本部</loc></item><item>日本語訳：中村 浩佳（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp/">株式会社ミツエーリンクス</loc>）</item></ulist></translationcredit></technique><technique id="SCR24"><short-name>プログレッシブ・エンハンスメントを用いて、利用者の要求に応じて新しいウィンドウを開く</short-name><applicability><p>HTML 4.01 及び XHTML 1.0 </p></applicability><applies-to><success-criterion idref="consistent-behavior-no-extreme-changes-context"/></applies-to><description><p>この実装方法の目的は、利用者が要求していない新しいウィンドウの出現によって引き起こされうる混乱を回避することである。突然新しいウィンドウが開くと、利用者は混乱したり、そのことに気づかなかったりする。文書型が<code><![CDATA[target]]></code>属性を認めていない場合（HTML 4.01 Strict や XHTML 1.0 Strict には存在しない）、又はコンテンツ制作者が<code><![CDATA[target]]></code>属性の使用を好まない場合には、ECMAScriptを用いて新しいウィンドウを開くことができる。以下にある事例は、スクリプトを用いて新しいウィンドウを開く方法を示している。その事例では、リンク（<code><![CDATA[a]]></code>要素）にイベントハンドラを追加して、利用者にリンク先のコンテンツが新しいウィンドウで開くことを事前に知らせている。</p></description><examples><eg-group><description><p>マークアップ：</p><p>スクリプトはドキュメントの<code><![CDATA[head]]></code>要素内に組み込まれており、リンクにはスクリプトのフックとなる<code><![CDATA[id]]></code>属性がある。</p></description><code><![CDATA[<script type="text/javascript" src="popup.js"></script>
…
<a href="help.html" id="newwin">ヘルプを表示</a>]]></code><description><p>スクリプト：</p></description><code><![CDATA[// ブラウザによるイベント登録のサポートは不十分だが
// 従来のイベントモデルを用いる
window.onload = addHandlers;

function addHandlers()
{
  var objAnchor = document.getElementById('newwin');

  if (objAnchor)
  {
    objAnchor.firstChild.data = objAnchor.firstChild.data + ' (新しいウィンドウで開く)';
    objAnchor.onclick = function(event){return launchWindow(this, event);}
    // UAAG ではユーザーエージェントにデバイス非依存な方法でイベントを処理することを
    // 要求しているが、そうしないブラウザが多いのでキーボードイベントを追加する
    objAnchor.onkeypress = function(event){return launchWindow(this, event);}
  }
}

function launchWindow(objAnchor, objEvent)
{
  var iKeyCode, bSuccess=false;

  // キーボードからのイベントである場合、ユーザーがリンクをリクエストしたときだけ
  // 新しいウィンドウを開くようにする（リターン又はスペース）
  if (objEvent && objEvent.type == 'keypress')
  {
    if (objEvent.keyCode)
      iKeyCode = objEvent.keyCode;
    else if (objEvent.which)
      iKeyCode = objEvent.which;

    // キャリッジ・リターン又はスペースではない場合、ユーザーエージェントが
    // アクションの処理を継続するようにtrueを返す
    if (iKeyCode != 13 && iKeyCode != 32)
      return true;
  }

  bSuccess = window.open(objAnchor.href);

  // ウィンドウが開かなかった場合、ブラウザには同じウィンドウで開くという
  // デフォルトのアクションを継続させる
  if (!bSuccess)
    return true;

  // ウィンドウが開いたら、ブラウザによる処理をそこで止める
  return false;
}]]></code></eg-group></examples><resources><see-also><ulist><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://en.wikipedia.org/wiki/Progressive_enhancement">Wikipedia: Progressive Enhancement</loc>
          </p></item></ulist></see-also></resources><related-techniques><relatedtech idref="H83"/></related-techniques><tests><procedure><olist><item><p>ドキュメントにあるリンクを起動して、新しいウィンドウが開くかどうかをチェックする。</p></item><item><p>新しいウィンドウを開くリンクが、次の全てをスクリプトを用いて実装されている：</p><olist><item><p>リンクが新しいウィンドウを開くことを明示している</p></item><item><p>デバイス非依存のイベントハンドラを用いている</p></item><item><p>新しいウィンドウを開けない場合には、ブラウザが同じウィンドウにリンク先のコンテンツを開くようにしている</p></item></olist></item></olist></procedure><expected-results><ulist><item><p>2.を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR24.html">SCR24: Using progressive enhancement to open new windows on user request（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.hitachi.co.jp/design/index.html">株式会社日立製作所デザイン本部</loc></item><item>日本語訳：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item></ulist></translationcredit></technique><technique id="SCR26"><short-name>動的なコンテンツをDOMのそのトリガーとなる要素の直後に挿入する</short-name><applicability><p>HTML及びXHTML、スクリプト</p></applicability><applies-to><success-criterion idref="keyboard-operation-keyboard-operable"/><success-criterion idref="navigation-mechanisms-focus-order"/><success-criterion idref="navigation-mechanisms-focus-visible"/></applies-to><description><p>この実装方法の目的は、Document Object Model（DOM）に挿入されたユーザーインタフェースの要素をタブ順序及びスクリーンリーダーの読み上げ順序がユーザーエージェント標準のふるまいによって正しく設定されるような方法で配置することである。この実装方法は、メニューやダイアログのように隠れているものと表示されているもの、全てのユーザーインタフェース要素に利用することができる。</p><p>スクリーンリーダーの読み上げ順序は、Document Object Model内のHTML又はXHTMLの要素の順序に基づいており、それはタブ順序についても同様である。この実装方法では、新しいコンテンツをDOMのそのトリガーとなる要素の直後に挿入する。トリガーとなる要素は、リンク又はボタンでなければならず、スクリプトはそのonclickイベントにより呼び出されなければならない。これらの要素はもともとフォーカス可能であり、そのonclickイベントはデバイスに依存しない。フォーカスは選択された要素に残り、その後に挿入された新しいコンテンツは、タブ順序及びスクリーンリーダーの読み上げ順序の両方において、次の順番となる。</p><p>この実装方法は同期された更新にも利用できることに注目して欲しい。（AJAXと呼ばれることのある）非同期の更新では、支援技術に非同期のコンテンツが挿入されたことを通知するために追加の実装方法が必要となる。</p></description><examples><eg-group><description><p>この例では、リンクがクリックされた際にメニューを生成し、そのリンクの後に挿入する。リンクのonclickイベントは新しいメニューのためのIDをパラメータとして渡すShowHideスクリプトを呼び出すために使用される。</p></description><code><![CDATA[<a href="#" onclick="ShowHide('foo',this)">切り替え</a>]]></code><description><p>ShowHideスクリプトは新しいメニューを含むdivを生成し、リンクを挿入する。最終行がスクリプトの核心となる。スクリプトのトリガーとなる要素の親を探し、新しい子として生成されたdivをそれに追加する。これにより、新しいdivはDOM内でリンクの次になる。利用者がタブを押したときには、フォーカスがメニュー内で最初のフォーカス可能な項目となる生成されたリンクに移動する。</p></description><code><![CDATA[ShowHide関数(id,src)
{
	var el = document.getElementById(id);
	if (!el)
	{
		el = document.createElement("div");
		el.id = id;
		var link = document.createElement("a");
		link.href = "javascript:void(0)";
		link.appendChild(document.createTextNode("Content"));
		el.appendChild(link);
		src.parentElement.appendChild(el);
	}
	else
	{
		el.style.display = ('none' == el.style.display ? 'block' : 'none');
	}
}]]></code><description><p>CSSはdivおよびリンクをメニューのように見せるために利用される。</p></description></eg-group></examples><resources/><related-techniques/><tests><procedure><olist><item><p>ポップアップではないダイアログのトリガーとなる全てのエリアを探す。</p></item><item><p>そのダイアログがボタン又はリンクのクリックイベントによりトリガーされる。</p></item><item><p>スクリプトによって生成されたDOMを調査できるツールを使って、ダイアログがDOM内で次の位置にきている。</p></item></olist></procedure><expected-results><ulist><item><p>2.及び3.を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR26.html">SCR26: Inserting dynamic content into the Document Object Model immediately following its trigger element（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：中村 精親（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp/">株式会社ミツエーリンクス</loc>）</item></ulist></translationcredit></technique><technique id="SCR27"><short-name>DOMを用いて、ページ上にある複数のセクションを並び替える</short-name><applicability><p>HTMLおよびXHTML、スクリプト</p></applicability><applies-to><success-criterion idref="navigation-mechanisms-focus-order"/></applies-to><description><p>この実装方法の目的は、コンポーネントを再配置するための極めてユーザブルかつアクセシブルなメカニズムを提供することである。再配置するためのメカニズムのうち、もっとも一般的なものは、コンポーネントに番号をつけることができる設定ページに利用者を送ること、又は、コンポーネントをドラッグアンドドロップして希望する位置へ移動できるようにすることのふたつである。ドラッグアンドドロップの方が、ひとつずつ項目を適当な位置に並べることができ、結果を感覚的に得られるため、はるかにユーザブルな方法である。残念なことに、ドラッグアンドドロップはマウスの利用に頼った方法である。この実装方法は、利用者がコンポーネントのメニューを使って、それらを機器に依存することなく適当な位置に再配置することを可能にする。ドラッグアンドドロップによる再配置機能の代替として、もしくはそれと併用して利用することができる。</p><p>メニューはリンクリストで、コンテンツを再配置するスクリプトのトリガーとなる、機器に依存しないonclickイベントを使用している。コンテンツは単に視覚的にだけでなく、Document Object Model (DOM)でも再配置されているので、すべての機器向けに正しい順序となっている。</p></description><examples><eg-group><description><p>この例は上下間の再配置を行う。このアプローチはまた、右と左のオプションを追加することで、2次元での再配置にも利用できる。</p><p>この例のコンポーネントは順序無しリストのリスト項目である。順序無しリストは、こうしたコンポーネントのような類似項目のためのとてもよいセマンティックモデルである。メニューを使う方法も、他のタイプのグループ化に使用できる。</p><p>モジュールはリスト項目であり、それぞれのモジュールは、div要素内のコンテンツに加えて、入れ子になったリストとして表されたメニューを含んでいる。</p></description><code><![CDATA[<ul id="swapper">
    <li id="black">
        <div class="module">
            <div class="module_header">
                <!-- メニューへのリンク -->
                <a href="#" onclick="ToggleMenu(event);">menu</a>
                <!-- メニュー -->
                <ul class="menu">
                    <li><a href="#" onclick="OnMenuClick(event)" 
                        onkeypress="OnMenuKeypress(event);">up</a></li>
                    <li><a href="#" onclick="OnMenuClick(event)" 
                        onkeypress="OnMenuKeypress(event);">down</a></li>
                </ul>
            </div>
            <div class="module_body">
                blackモジュールのテキスト
            </div>
        </div>
    </li>
    ...
</ul>]]></code><description><p>ここまでは、簡単なツリーの例でメニューを出したり隠したりする方法をとりあげてきたので、モジュールを入れ替えるコードについても着目する。イベントを同期させてデフォルトのリンクアクションをキャンセルしてから、作業に移動する。最初に、これから作業する要素、メニュー、再配置されるモジュール、メニューリンクのための一連のローカル変数をセットする。それから、再配置の方向を確認した後に、入れ替えるノードの取得を試みる。ノードを見つけた場合、swapNode()を呼び出して二つのモジュールを入れ替え、 PositionElement()でモジュールと共に絶対配置されたメニューを移動し、すべてが完了したメニュー項目にフォーカスを設定する。</p></description><code><![CDATA[MoveNode 関数(evt,dir)
{
    HarmonizeEvent(evt);
    evt.preventDefault();

    var src = evt.target;
    var menu = src.parentNode.parentNode;
    var module = menu.parentNode.parentNode.parentNode;
    var menuLink = module.getElementsByTagName("a")[0];
    var swap = null;
    
    switch(dir)
    {
        case 'up':
        {
            swap = module.previousSibling;
            while (swap && swap.nodeType != 1)
            {
                swap = swap.previousSibling;
            }
            break;
        }
        case 'down':
        {
            swap = module.nextSibling;
            while (swap && swap.nodeType != 1)
            {
                swap = swap.nextSibling;
            }
            break;
        }
    }
    if (swap && swap.tagName == node.tagName)
    {
        module.swapNode(swap);
        PositionElement(menu,menuLink,false,true);
    }
    src.focus();
}]]></code><description><p>ノード入れ替えのCSSは、モジュール及び小さなメニューのサイズや色の調整だけで、前のツリーの例と大きな違いはない。</p></description><code><![CDATA[ul#swapper { margin:0px; padding:0px; list-item-style:none; }
ul#swapper li { padding:0; margin:1em; list-style:none; height:5em; width:15em; 
    border:1px solid black; }
ul#swapper li a { color:white; text-decoration:none; font-size:90%; }

ul#swapper li div.module_header { text-align:right; padding:0 0.2em; }
ul#swapper li div.module_body { padding:0.2em; }

ul#swapper ul.menu { padding:0; margin:0; list-style:none; background-color:#eeeeee; 
    height:auto; position:absolute; text-align:left; border:1px solid gray; display:none; }
ul#swapper ul.menu li { height:auto; border:none; margin:0; text-align:left; 
    font-weight:normal; width:5em; }
ul#swapper ul.menu li a { text-decoration:none; color:black; padding:0 0.1em; 
    display:block; width:100%; }]]></code></eg-group></examples><resources/><related-techniques/><tests><procedure><olist><item><p>ドラッグアンドドロップで再配置可能なウェブユニット内のすべてのコンポーネントを探す。</p></item><item><p>リンクのリストで構成されたメニューでも、それらが再配置可能なメカニズムがあるかどうかもチェックする。</p></item><item><p>メニューがDOM内の再配置可能な項目の中に含まれているかをチェックする。</p></item><item><p>再配置のスクリプトはリンクのonclickイベントだけをトリガーにしているかをチェックする。</p></item><item><p>視覚的にだけではなく、項目がDOMの中でも再配置されているかをチェックする。</p></item></olist></procedure><expected-results><ulist><item><p>2.～5.を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR27.html">SCR27: Reordering page sections using the Document Object Model（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：辻 勝利（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp/">株式会社ミツエーリンクス</loc>）</item></ulist></translationcredit></technique><technique id="SCR28"><short-name>展開可能及び折り畳み可能なメニューを用いて、コンテンツのブロックをバイパスする</short-name><applicability><p>クライアントサイド・スクリプティングを提供するウェブコンテンツ技術</p></applicability><applies-to><success-criterion idref="navigation-mechanisms-skip"/></applies-to><description><p>この実装方法は、繰り返される構成要素を利用者のコントロールの下でメニューを展開したり折りたたんだりできるメニューの中に置くことで、その構成要素をスキップできるようにする。利用者は、メニューを折りたたむことで繰り返される構成要素をスキップできる。利用者は、メニューの要素を隠したり削除したりするユーザーインターフェースを呼び出すことができる。関連情報には、ナビゲーションをスキップするメカニズムを提供するために利用できるメニュー、ツールバー及びツリーの実装方法をいくつか挙げている。</p><note><p class="prefix">類似の方法は、サーバーサイドスクリプティングを用いて修正後のウェブページを読み込むことでも実装できる。</p></note></description><examples><eg-group><description><p>ウェブページの先頭にあるナビゲーションリンクは、すべてHTML、CSS及びJavaScriptを用いて実装されているメニュー項目である。ナビゲーションバーが展開しているとき、ナビゲーションのリンクは利用可能になっている。ナビゲーションバーがたたまれているとき、リンクは利用不可能である。</p></description><code><![CDATA[...

  <script type="text/javascript">
  function toggle(id){
    var n = document.getElementById(id);
    n.style.display =  (n.style.display != 'none' ? 'none' : '' );
  }
  </script>

...

  <a href="#" onclick="toggle("navbar")">ナビゲーションバー切り替え</a>

  <ul> id="navbar">
  <li><a href="http://target1.html">リンク 1</a></li>
  <li><a href="http://target2.html">リンク 2</a></li>
  <li><a href="http://target3.html">リンク 3</a></li>
  <li><a href="http://target4.html">リンク 4</a></li>
  </ul>

...]]></code><description><p>このコードの実装サンプル：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/working-examples/SCR28/toggle-navbar.html">ナビゲーションバーをリンクで切り替える</loc></p></description></eg-group><eg-group><description><p>一連のウェブページのための目次はそれぞれのページの先頭近くで繰り返される。目次の先頭にあるボタンで、利用者はそれを消したり復元したりできる。</p></description><code><![CDATA[...

   <script type="text/javascript">
  function toggle(id){
    var n = document.getElementById(id);
    n.style.display =  (n.style.display != 'none' ? 'none' : '' );
  }
  </script>

  ...

  <button onclick="return toggle('toc');">目次切り替え</button>
  <div id="toc">
    ...
  </div>

...]]></code><description><p>このコードの実装サンプル：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/working-examples/SCR28/toggle-toc.html">目次をボタンで切り替える</loc></p></description></eg-group></examples><resources><see-also><ulist><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.bobbyvandersluis.com/articles/unobtrusive_show_hide/index.html">Unobtrusive show/hide behavior reloaded</loc>
          </p></item><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.dustindiaz.com/seven-togglers/">Seven ways to toggle an element with JavaScript</loc>
          </p></item></ulist></see-also></resources><related-techniques><relatedtech idref="H69"/><relatedtech idref="H50"/><relatedtech idref="H70"/></related-techniques><tests><procedure><olist><item><p>ユーザーインタフェースコントロールで、繰り返されるコンテンツを展開したり折りたたんだりできるかをチェックする。</p></item><item><p>コンテンツが展開されたとき、それがプログラムで解釈可能なコンテンツに含まれていて、論理的な場所で読み上げ順序があるかをチェックする。</p></item><item><p>コンテンツが折りたたまれているとき、それがプログラムで解釈可能でない部分にあることをチェックする。</p></item></olist></procedure><expected-results><ulist><item><p>上記のすべての項目を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR28.html">SCR28: Using an expandable and collapsible menu to bypass block of content（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：辻 勝利（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp/">株式会社ミツエーリンクス</loc>）</item></ulist></translationcredit></technique><technique id="SCR30"><short-name>スクリプトを用いて、リンクのラベルを変更する</short-name><applicability><p>HTML及びXHTMLで使用されるクライアントサイドスクリプト</p></applicability><applies-to><success-criterion idref="navigation-mechanisms-refs"/><success-criterion idref="navigation-mechanisms-link"/></applies-to><description><p>この実装方法の目的は、リンクが文脈以外でも理解可能になるように、追加情報をリンクテキストに加えることを利用者が選択できるようにすることである。</p><p>一部の利用者は、リンクの文脈を参照する必要がないように、リンクがすべてを含んでいることを好む。別の利用者は、それぞれのリンクに文脈に関する情報が含まれていると、反復されてサイトの使い勝手が低下すると感じている。支援技術の利用者の間では、どちらが好ましいかに関して、ワーキンググループへのフィードバックは分かれている。この実装方法は、利用者自身にとって良い方法を選ぶことを可能にする。</p><p>どのようなリンクの目的を理解する場合でも追加の文脈が必要とならないようにするため、そのページのリンクのリンクテキストを展開するページの先頭近くにリンクが提供される。展開されるリンクの目的がそのリンクテキストから、常に直接理解可能でなければならない。</p><p>この実装方法では、現在表示されているページのリンクだけを展開する。利用者がそのサイトに対して1度だけ設定を行えば良いようにするために、設定情報をCookie又はサーバーサイドの利用者プロファイルに保存することも可能であり、場合によってはそれが望ましい。</p></description><examples><eg-group><description><p>この例では、JavaScript を用いて直接リンクのテキストに文脈上の情報を追加する。linkクラスはどのテキストを追加するかを決定する。「リンクを展開する」リンクが選択されたとき、ページ内のそれぞれのリンクにテキストを追加すべきかがテストされる。</p></description><code><![CDATA[...
<script>
 var linkContext = {
   "hist":" 版　Webの歴史",
   "cook":" 版　Cooking for Nerds"
 };

 function doExpand() {
   var links = document.links;
   var link;

   for (link in links) {
     var cn = links[link].className;
     if (linkContext[cn]) {
       links[link].appendChild(document.createTextNode(linkContext[cn]));
     }
   }
 }
</script>

<h1>本のダウンロード</h1>
<p><a href="#" onclick="doExpand();">リンクを展開する</a></p>

<ul>
<li>Webの歴史：
<a href="history.docx" class="hist">Word</a>, 
<a href="history.pdf" class="hist">PDF</a>, 
<a href="history.html" class="hist">HTML</a>
</li>

<li>Cooking for Nerds：
<a href="history.docx" class="cook">Word</a>, 
<a href="history.pdf" class="cook">PDF</a>, 
<a href="history.html" class="cook">HTML</a>
</li>
</ul>

...]]></code></eg-group></examples><resources/><related-techniques><relatedtech idref="G91"/><relatedtech idref="H30"/><relatedtech idref="H33"/><relatedtech idref="C7"/></related-techniques><tests><procedure><olist><item><p>ページの先頭近くに、リンクを展開するリンクがある。</p></item><item><p>1で確認したリンクがリンクテキストだけで見つけられる。</p></item><item><p>リンクテキストだけで識別できないリンクをページ中から探す。</p></item><item><p>1.のコントロールを有効にする</p></item><item><p>3.で見つけたリンクの目的が、リンクテキストだけで確認できる。</p></item></olist></procedure><expected-results><ulist><item><p>1., 2.及び5.を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR30.html">SCR30: Using scripts to change the link text（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：辻 勝利（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp/">株式会社ミツエーリンクス</loc>）</item></ulist></translationcredit></technique><technique id="SCR31"><short-name>スクリプトを用いて、フォーカスのある要素の背景色又はボーダーを変更する</short-name><applicability><p>HTML 及び XHTML、CSS、Script</p></applicability><applies-to><success-criterion idref="navigation-mechanisms-focus-visible"/></applies-to><ua-issues><ua-issue><p>この実装方法は<code><![CDATA[:focus]]></code>疑似クラスをサポートしていないがスクリプトをサポートしている、マイクロソフトのInternet Explorerを含むユーザエージェント上で用いることができる。</p></ua-issue></ua-issues><description><p>この実装方法の目的は、コンテンツ制作者がCSSを適用してフォーカス表示を通常よりもより見やすくするためにJavaScriptを使えるようにすることである。要素がフォーカスを受ける時、背景色またはボーダーは視覚的に異なるように変化する。要素からフォーカスがはずれたとき元のスタイルにもどる。この実装方法は:focus疑似クラスをサポートしているいないに関わらず、スクリプトやCSSをサポートしているどんなHTMLのユーザエージェントでも用いることができる。</p></description><examples><eg-group><description><p>この事例において、リンクにフォーカスが当たった時、背景は黄色に変わる。フォーカスがはずれたとき、黄色ではなくなる。もしリンクに背景色がある場合は、スクリプト内で””よりむしろその色を用いることに注意する。</p></description><code><![CDATA[...
<script>
 function toggleFocus(el)
 {
  el.style.backgroundColor =  el.style.backgroundColor=="yellow" ? "inherit" : "yellow";
 }
</script>

...

<a href="example.html" onfocus="toggleFocus(this)" onblur="toggleFocus(this)">ここにフォーカスを置く</a>
...]]></code></eg-group></examples><resources/><related-techniques><relatedtech idref="C15"/></related-techniques><tests><procedure><olist><item><p>キーボード操作でページ内の各要素にタブ移動する。</p></item><item><p>フォーカス表示が視覚的に認識可能である。</p></item></olist></procedure><expected-results><ulist><item><p>2.を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR31.html">SCR31: Using script to change the background color or border of the element with focus&#xD;
（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.hitachi.co.jp/design/index.html">株式会社日立製作所デザイン本部</loc></item><item>日本語訳：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://jp.fujitsu.com">富士通株式会社</loc>,<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://jp.fujitsu.com/group/fdl/">富士通デザイン株式会社</loc></item></ulist></translationcredit></technique><technique id="SCR32"><short-name>クライアントサイドのバリデーションを提供し、DOMを介してエラーテキストを追加する</short-name><applicability><p>HTML又はXHTMLで使用されるスクリプト。</p></applicability><applies-to><success-criterion idref="minimize-error-identified"/><success-criterion idref="minimize-error-suggestions"/></applies-to><description><p>この実装方法の目的は、クライアントサイドでフォームフィールドの検証に失敗したときにエラーメッセージを表示する方法について説明することである。アンカー要素はリスト中でエラーメッセージを表示させる際に使用され、検証が必要なフィールドの上に挿入される。フォーカスをエラーメッセージの場所に移し、利用者の注意を引くために、アンカー要素がエラーメッセージに使用される。アンカー要素の<code><![CDATA[href]]></code>は、エラーがみつかったフィールドへのページ内リンクを含む。</p><p>配置されたアプリケーションにおいて、もしJavaScriptが無効になっていれば、クライアントサイドの検証は行われない。そのため、この実装方法はスクリプトが適合性において信頼できる、又はサーバーサイドの検証技術があらゆるエラーを発見し、エラーを含むフィールドの情報とともにページを返すように用いられている場合のみ、十分であるといえる。</p></description><examples><eg-group><description><p>この事例は必須のフィールドを検証し、さらに特定の書式が必要なフィールドを検証する。エラーがみつかったとき、スクリプトはエラーメッセージの一覧をDOMに挿入し、フォーカスをそこへ移動する。</p><graphic xmlns:xlink="http://www.w3.org/1999/xlink" source="http://www.w3.org/TR/2008/NOTE-WCAG20-TECHS-20081211/working-examples/SCR32/form2.jpg" alt="サンプルの画面イメージ：スクリーンショットは、正しく記入が行われていないいくつかのフィールドのエラーメッセージをあらわしている。エラーメッセージはリンクリストでフォームの先頭近くに現れる。"/><p> <em>HTML及びJavascriptのコード</em> </p><p>これは事例のフォームのHTMLである：</p></description><code><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="ja">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>    
        <title>フォームの検証</title>
        <link href="css/validate.css" rel="stylesheet" type="text/css"/>
        <script type="text/javascript" src="scripts/validate.js"/>
    </head>
    <body>

        <h1>フォームの検証</h1>

        <p>以下のフォームは、もしスクリプトが利用可能であれば送信前に検証されるが、
		そうでなければサーバー上で検証される。任意と書かれた以外のすべての
		フィールドは必須である。送信時にエラーがみつかった場合、フォームはキャンセルされて
		エラー一覧がフォームの先頭に表示される。</p>

        <p> 下に貴方の情報を入力してください。 </p>

        <h2>フォームの検証</h2>

        <form id="personalform" method="post" action="index.php">
            <div class="validationerrors"/>
            <fieldset>
                <legend>個人情報詳細</legend>
                <p>
                    <label for="forename">名前を入力してください</label>
                    <input type="text" size="20" name="forename" id="forename" class="string"
                        value=""/>
                </p>
                <p>
                    <label for="age">年齢を入力してください</label>
                    <input type="text" size="20" name="age" id="age" class="number" value=""/>
                </p>
                <p>
                    <label for="email">電子メールアドレスを入力してください</label>
                    <input type="text" size="20" name="email" id="email" class="email" value=""/>
                </p>
            </fieldset>
            <p>
                <input type="submit" name="signup" value="登録"/>
            </p>
        </form>
        <h2>2番目のフォーム</h2>
        <form id="secondform" method="post" action="index.php#focuspoint">
            <div class="validationerrors"/>
            <fieldset>
                <legend>2番目のフォームの詳細</legend>
                <p>
                    <label for="suggestion">提案内容を入力</label>
                    <input type="text" size="20" name="suggestion" id="suggestion" 
                      class="string" value=""/>
                </p>
                <p>
                    <label for="optemail">貴方のメールアドレスを入力してください（任意）</label>
                    <input type="text" size="20" name="optemail" id="optemail"
                        class="optional email" value=""/>
                </p>
                <p>
                    <label for="rating">この提案を評価してください</label>
                    <input type="text" size="20" name="rating" id="rating" 
                      class="number" value=""/>
                </p>
                <p>
                    <label for="jibberish">合言葉を入力してください（任意）</label>
                    <input type="text" size="20" name="jibberish" id="jibberish" value=""/>
                </p>

            </fieldset>
            <p>
                <input type="submit" name="submit" value="提案の追加"/>
            </p>
        </form>
    </body>
</html>]]></code><description><p>以下は検証を行ってエラーメッセージを挿入するJavaScriptである：</p></description><code><![CDATA[window.onload = initialise;

function initialise()
{
   var objForms = document.getElementsByTagName('form');
   var iCounter;

   // フォームそれぞれにイベント・ハンドラを追加
   for (iCounter=0; iCounter<objForms.length; iCounter++)
   {
      objForms[iCounter].onsubmit = function(){return validateForm(this);};
   }
}


// フォームのイベント・ハンドラ
function validateForm(objForm)
{
   var arClass = [];
   var iErrors = 0;
   var objField = objForm.getElementsByTagName('input');
   var objLabel = objForm.getElementsByTagName('label');
   var objList = document.createElement('ol');
   var objError, objExisting, objNew, objTitle, objParagraph, objAnchor, objPosition;
   var strLinkID, iFieldCounter, iClassCounter, iCounter;

   // 部分識別子を固有にするため、
   // フォームのid又はnameを取得する
   if (objForm.id)
   {
      strLinkID = objForm.id + 'ErrorID';
   }
   else
   {
      strLinkID = objForm.name + 'ErrorID';
   }

   // validationクラスを探索するため、inputフォーム・コントロールをループする
   for (iFieldCounter=0; iFieldCounter<objField.length; iFieldCounter++)
   {
      // フィールドのクラスを取得し、適切なクラスを探す
      arClass = objField[iFieldCounter].className.split(' ');
      for (iClassCounter=0; iClassCounter<arClass.length; iClassCounter++)
      {
         switch (arClass[iClassCounter])
         {
            case 'string':
               if (!isString(objField[iFieldCounter].value, arClass))
               {
                  if (iErrors === 0)
                  {
                     logError(objField[iFieldCounter], objLabel, objList, strLinkID);
                  }
                  else
                  {
                     logError(objField[iFieldCounter], objLabel, objList, '');
                  }
                  iErrors++;
               }
               break;
            case 'number':
               if (!isNumber(objField[iFieldCounter].value, arClass))
               {
                  if (iErrors === 0)
                  {
                     logError(objField[iFieldCounter], objLabel, objList, strLinkID);
                  }
                  else
                  {
                     logError(objField[iFieldCounter], objLabel, objList, '');
                  }
                  iErrors++;
               }
               break;

            case 'email' :
               if (!isEmail(objField[iFieldCounter].value, arClass))
               {
                  if (iErrors === 0)
                  {
                     logError(objField[iFieldCounter], objLabel, objList, strLinkID);
                  }
                  else
                  {
                     logError(objField[iFieldCounter], objLabel, objList, '');
                  }
                  iErrors++;
               }
               break;
         }
      }
   }

   if (iErrors > 0)
   {
      // validではない場合、エラーメッセージを表示する
      objError = objForm.getElementsByTagName('div');
      
      // 存在しているエラーを探す
      for (iCounter=0; iCounter<objError.length; iCounter++)
      {
         if (objError[iCounter].className == 'validationerrors')
         {
            objExisting = objError[iCounter];
         }
      }

      objNew = document.createElement('div');
      objTitle = document.createElement('h2');
      objParagraph = document.createElement('p');
      objAnchor = document.createElement('a');

      if (iErrors == 1)
      {
         objAnchor.appendChild(document.createTextNode('送信した中にエラーが1つあります'));
      }
      else
      {
         objAnchor.appendChild(document.createTextNode('送信した中にエラーが' + iErrors + '個あります'));
      }
      objAnchor.href = '#' + strLinkID;
      objAnchor.className = 'submissionerror';

      objTitle.appendChild(objAnchor);
      objParagraph.appendChild(document.createTextNode('以下をご確認ください'));

      objNew.className = 'validationerrors';

      objNew.appendChild(objTitle);
      objNew.appendChild(objParagraph);
      objNew.appendChild(objList);
      
      // 既にエラーがある場合、新しいエラーと交換する。
      // それ以外の場合、フォームの先頭に新しいエラーを追加する。
      if (objExisting)
      {
         objExisting.parentNode.replaceChild(objNew, objExisting);
      }
      else
      {
         objPosition = objForm.firstChild;
         objForm.insertBefore(objNew, objPosition);
      }

      // 待ち時間の設定
      setTimeout(function() { objAnchor.focus(); }, 50);
      
      // フォームを送信しない
      objForm.submitAllowed = false;
      return false;
   }

   // フォームを送信
   return true;
}

// 問題のあるフィールドコントロールを指すリスト項目にリンクを追加する関数
function addError(objList, strError, strID, strErrorID)
{
   var objListItem = document.createElement('li');
   var objAnchor = document.createElement('a');
   
   // フォーム・コントロールへの部分識別子
   objAnchor.href='#' + strID;

   // エラーの見出しに向けたターゲットにする
   if (strErrorID.length > 0)
   {
      objAnchor.id = strErrorID;
   }

   // エラーメッセージ用のラベルプロンプトを使う
   objAnchor.appendChild(document.createTextNode(strError));
   // フォーム・コントロールにフォーカスを当てるために、キーボード及びマウスイベントを追加する
   objAnchor.onclick = function(event){return focusFormField(this, event);};
   objAnchor.onkeypress = function(event){return focusFormField(this, event);};
   objListItem.appendChild(objAnchor);
   objList.appendChild(objListItem);
}

function focusFormField(objAnchor, objEvent)
{
   var strFormField, objForm;

   // キーボードでもリンクが機能するようにする
   if (objEvent && objEvent.type == 'keypress')
   {
      if (objEvent.keyCode != 13 && objEvent.keyCode != 32)
      {
         return true;
      }
   }

   // フォーム・コントロールにフォーカスを当てる
   strFormField = objAnchor.href.match(/[^#]\w*$/);
   objForm = getForm(strFormField);
   objForm[strFormField].focus();
   return false;
}

// 与えられたフォームフィールドの名前から、フォーム要素を返す関数
function getForm(strField)
{
   var objElement = document.getElementById(strField);

   // 適切なフォームを探す
   do
   {
      objElement = objElement.parentNode;
   } while (!objElement.tagName.match(/form/i) && objElement.parentNode);

   return objElement;
}

// リスト中のエラーを記録する関数
function logError(objField, objLabel, objList, strErrorID)
{
   var iCounter, strError;

   // エラープロンプトのラベルを探す
   for (iCounter=0; iCounter<objLabel.length; iCounter++)
   {
      if (objLabel[iCounter].htmlFor == objField.id)
      {
         strError = objLabel[iCounter].firstChild.nodeValue;
      }
   }

   addError(objList, strError, objField.id, strErrorID);
}

// 検証ルーティン - 要求事項として

function isString(strValue, arClass)
{
   var bValid = (typeof strValue == 'string' && strValue.replace(/^\s*|\s*$/g, '') 
     !== '' && isNaN(strValue));

   return checkOptional(bValid, strValue, arClass);
}

function isEmail(strValue, arClass)
{
   var objRE = /^[\w-\.\']{1,}\@([\da-zA-Z\-]{1,}\.){1,}[\da-zA-Z\-]{2,}$/;
   var bValid = objRE.test(strValue);

   return checkOptional(bValid, strValue, arClass);
}

function isNumber(strValue, arClass)
{
   var bValid = (!isNaN(strValue) && strValue.replace(/^\s*|\s*$/g, '') !== '');

   return checkOptional(bValid, strValue, arClass);
}

function checkOptional(bValid, strValue, arClass)
{
   var bOptional = false;
   var iCounter;

   // optionalについて確認
   for (iCounter=0; iCounter<arClass.length; iCounter++)
   {
      if (arClass[iCounter] == 'optional')
      {
         bOptional = true;
      }
   }

   if (bOptional && strValue.replace(/^\s*|\s*$/g, '') === '')
   {
      return true;
   }

   return bValid;
   }]]></code><description><p>このコードの実装サンプルは、PHP、JavaScript、CSS及びXHTMLで実装されている：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/working-examples/SCR32/index.php">フォーム検証の例</loc></p></description></eg-group></examples><resources/><related-techniques><relatedtech idref="G83"/><relatedtech idref="G85"/><relatedtech idref="SCR18"/></related-techniques><tests><procedure><p>アンカータグと上記の実装方法による適切なスクリプトを用いて、エラーメッセージを作成する。</p><olist><item><p>ページを読み込む。</p></item><item><p>エラーメッセージと結びつけられたフィールドに適切な値を入力し、エラーメッセージが表示されない。</p></item><item><p>エラーメッセージと結びつけられたフィールドに不適切な値を入力し、そのフィールドに適したエラーメッセージが表示される。</p></item><item><p>エラーメッセージにフォーカスが当たる。</p></item><item><p>表示されたエラーメッセージと関連するフィールドに適切な値を入力し、エラーメッセージがなくなる。</p></item><item><p>アンカータグによってエラーメッセージと関連付けられたすべてのフィールドに対して、繰り返す。</p></item></olist><note><p class="prefix">上記の手順を、支援技術を用いて実行することも推奨する。</p></note></procedure><expected-results><ulist><item><p>2、3、4 及び 5 の全てを満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR32.html">SCR32: Providing client-side validation and adding error text via the DOM（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：辻 勝利（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp/">株式会社ミツエーリンクス</loc>）</item></ulist></translationcredit></technique><technique id="SCR33"><short-name>スクリプトを用いてコンテンツをスクロールし、それを一時停止できるメカニズムを提供する</short-name><applicability><p>スクリプトでコントロールされる、コンテンツのスクロールをサポートするウェブコンテンツ技術 </p></applicability><applies-to><success-criterion idref="time-limits-required-behaviors"/><success-criterion idref="time-limits-pause"/></applies-to><description><p>この実装方法の目的は、スクロールするコンテンツがスクリプトで作成されている場合に、利用者にそのスクロールを停止する手段を提供することである。スクロールするコンテンツは、ロービジョンや認知障害の利用者にとって読みにくかったり、全く読めなかったりする。また、動くものは、一部の人々にとって、ウェブページのほかの部分に集中することへの妨げとなる。</p></description><examples><eg-group><description><p>この例では、CSS及びJavaScriptを用いて、いくつかのテキストを視覚的にスクロールさせている。スクロールの移動を停止するためのリンクが含まれている。</p><p>この方法では、JavaScript又はCSSがサポートされていないか有効になっていないときは、すべてのテキストを表示し、リンクを省略する。</p><p>下のコードは、webSemanticによるアクセシブルなスクローラー（2008年7月）の修正版である。</p><p>XHTML部分：</p></description><code><![CDATA[...
<div id="scroller">
<p id="tag">このテキストはスクロールし、JavaScript及びCSSが
サポートされていて有効なときは、停止/スクロールのリンクが提供される。</p>
</div>
...]]></code><description><p>CSS部分：</p></description><code><![CDATA[...
body {font:1em verdana,sans-serif; color:#000; margin:0}

/* position:relative及びoverflow:hiddenは必須 */
#scroller { position:relative; overflow:hidden; width:15em; border:1px solid #008080; }

/* スクロールするテキスト用のフォーマットを追加 */
#tag { margin:2px 0; }

/* #testPは#tagのテキスト変更に関するプロパティを全て含む */
#testP { visibility:hidden; position:absolute; white-space:nowrap; } 

/* ページ先頭の目印として利用され、かつ幅を制限する */
#top { width:350px; margin:auto; }
...]]></code><description><p>JavaScript部分：</p></description><code><![CDATA[var speed=50        // スクロール速度
var step=3          // 動きのスムーズ度合い
var StartActionText= "Scroll"  // 開始させるリンクのテキスト
var StopActionText = "Pause"   // 停止させるリンクのテキスト

var x, scroll, divW, sText=""

function onclickIE(idAttr,handler,call){
  if ((document.all)&&(document.getElementById)){idAttr[handler]="Javascript:"+call}
}

function addLink(id,call,txt){
  var e=document.createElement('a')
  e.setAttribute('href',call)
  var linktext=document.createTextNode(txt)
  e.appendChild(linktext)
  document.getElementById(id).appendChild(e)
}

function getElementStyle() {
    var elem = document.getElementById('scroller');
    if (elem.currentStyle) {
        return elem.currentStyle.overflow;
    } else if (window.getComputedStyle) {
        var compStyle = window.getComputedStyle(elem, '');
        return compStyle.getPropertyValue("overflow");
    }
    return "";
}

function addControls(){
// 最初にCSSサポートをテスト
// style要素又は外部ファイルで定義されたoverflowプロパティ値をテスト
if (getElementStyle()=="hidden") {
  var f=document.createElement('div');
  f.setAttribute('id','controls');
  document.getElementById('scroller').parentNode.appendChild(f);
  addLink('controls','Javascript:clickAction(0)',StopActionText);
  onclickIE(document.getElementById('controls').childNodes[0],"href",'clickAction(0)');
  document.getElementById('controls').style.display='block';
  }
}

function stopScroller(){clearTimeout(scroll)}

function setAction(callvalue,txt){
  var c=document.getElementById('controls')
  c.childNodes[0].setAttribute('href','Javascript:clickAction('+callvalue+')')
  onclickIE(document.getElementById('controls').childNodes[0],"href",'clickAction

('+callvalue+')')
  c.childNodes[0].firstChild.nodeValue=txt
}

function clickAction(no){
  switch(no) {
    case 0:
      stopScroller();
      setAction(1,StartActionText);
      break;
    case 1:
      startScroller();
      setAction(0,StopActionText);
  }
}

function startScroller(){
  document.getElementById('tag').style.whiteSpace='nowrap'
  var p=document.createElement('p')
  p.id='testP'
  p.style.fontSize='25%' //mozilla向け修正 使用する前に4倍する
  x-=step
  if (document.getElementById('tag').className) p.className=document.getElementById

('tag').className
  p.appendChild(document.createTextNode(sText))
  document.body.appendChild(p)
  pw=p.offsetWidth
  document.body.removeChild(p)
  if (x<(pw*4)*-1){x=divW}
  document.getElementById('tag').style.left=x+'px'
  scroll=setTimeout('startScroller()',speed)
}

function initScroller(){
  if (document.getElementById && document.createElement && document.body.appendChild) {
    addControls();
    divW=document.getElementById('scroller').offsetWidth;
    x=divW;
    document.getElementById('tag').style.position='relative';
    document.getElementById('tag').style.left=divW+'px';
    var ss=document.getElementById('tag').childNodes;
    for (i=0;i<ss.length;i++) {sText+=ss[i].nodeValue+" "};
    scroll=setTimeout('startScroller()',speed);
  }
}

function addLoadEvent(func) {
  if (!document.getElementById | !document.getElementsByTagName) return
  var oldonload = window.onload
  if (typeof window.onload != 'function') {
    window.onload = func;
  } else {
    window.onload = function() {
      oldonload()
      func()
    }
  }
}

addLoadEvent(initScroller)]]></code><description><p>このコードの実装サンプル：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/working-examples/SCR33/Overview.html">コンテンツのスクロールにスクリプトを用い、停止する仕組みを提供しているサンプル</loc></p></description></eg-group></examples><resources><see-also><ulist><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.websemantics.co.uk/tutorials/accessible_scroller/">webSemanticによるアクセシブルなスクローラー</loc>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.websemantics.co.uk/tutorials/accessible_scroller/">webSemantics Accessible Scroller</loc>
          </p></item></ulist></see-also></resources><related-techniques><relatedtech idref="G4"/></related-techniques><tests><procedure><olist><item><p>スクロールするコンテンツを停止する仕組みが提供されている。</p></item><item><p>停止する仕組みを用いて、コンテンツのスクロールが停止する。</p></item><item><p>スクロールが停止し、自動的に再起動しない。</p></item><item><p>停止中のコンテンツを再起動できる仕組みが提供されている。</p></item><item><p>提供されている再起動の仕組みを用いて、コンテンツのスクロールを再起動する。</p></item><item><p>停止していた位置からスクロールが再開される。</p></item></olist></procedure><expected-results><ulist><item><p>3.及び6.を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR2.html">SCR33: Using script to scroll content, and providing a mechanism to pause it（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.hitachi.co.jp/design/index.html">株式会社日立製作所デザイン本部</loc></item><item>日本語訳：辻 勝利（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp/">株式会社ミツエーリンクス</loc>）</item></ulist></translationcredit></technique><technique id="SCR34"><short-name>テキストサイズに応じて拡大するように、サイズ及びポジションを定める</short-name><applicability><p>クライアントサイド・スクリプティング</p></applicability><applies-to><success-criterion idref="visual-audio-contrast-scale"/><success-criterion idref="visual-audio-contrast-visual-presentation"/></applies-to><ua-issues><ua-issue><p>サイズ及びポジションを定めることは複雑であり、異なるブラウザは異なる結果をだすことになる。これはCSSスタイリングでpadding、 margins及びwidthを一つのオブジェクトに対して組み合わせて使用したとき、又はオフセット値及び単純な値、例えばoffsetWidthとwidthを組合せて使用したときに起こりうる。
                    これらのうちのいくつかはズームに対して異なる動きをする。
                  Internet Explorer 6及びそれ以降のバージョンと、IEのそれより前のバージョンとの違いについての説明は、<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://msdn.microsoft.com/en-us/library/bb250395(VS.85).aspx#cssenhancements_topic3">MSDN: Fix the Box Instead of Thinking Outside It（英語）</loc>を参照すること。</p></ua-issue></ua-issues><description><p>この実装方法の目的は、文字サイズが縮小・拡大されるのに従って、適切に拡大・縮小するように要素のサイズ及びポジションを定めることである。</p><p>ここに要素のサイズとポジションを決めるJavaScriptの4つプロパティがある：</p><ulist><item><p>
                        <code><![CDATA[offsetHeight]]></code> （ピクセルでの要素の高さ）</p></item><item><p>
                        <code><![CDATA[offsetWidth]]></code> （ピクセルでの要素の幅）</p></item><item><p>
                        <code><![CDATA[offsetLeft]]></code> （ピクセルでの親要素（offsetParent）の左からの距離）</p></item><item><p>
                        <code><![CDATA[offsetTop]]></code> （ピクセルでの親要素（offsetParent）の上からの距離）</p></item></ulist><p><code><![CDATA[offsetHeight]]></code>や<code><![CDATA[offsetWidth]]></code>を用いて高さや幅を定めることは簡単である、しかし、オブジェクトの左とトップの位置を絶対配置の値として定める時、親要素を考える必要がある。下記において、<code><![CDATA[calculatePosition]]></code>関数は、要素におけるすべての親ノードの最終的な値が決定するまで繰り返されている。
                 その関数は<code><![CDATA[objElement]]></code>（当該の要素の名前）とオフセットプロパティ（<code><![CDATA[offsetLeft]]></code>又は<code><![CDATA[offsetTop]]></code>）の2つの引数を取っている。</p></description><examples><eg-group><description><p>Javascriptの関数：</p></description><code><![CDATA[function calculatePosition(objElement, strOffset)
{
    var iOffset = 0;

    if (objElement.offsetParent)
    {
        do 
        {
            iOffset += objElement[strOffset];
            objElement = objElement.offsetParent;
        } while (objElement);
    }

    return iOffset;
}]]></code><description><p>次の事例は、上の関数がオブジェクトを、参照オブジェクトの下、かつ、左から同じ距離に配置するために用いられていることを示している：</p></description><code><![CDATA[// Get a reference object
var objReference = document.getElementById('refobject');
// Get the object to be aligned
var objAlign = document.getElementById('lineup');

objAlign.style.position = 'absolute';
objAlign.style.left = calculatePosition(objReference, 'offsetLeft') + 'px';
objAlign.style.top = calculatePosition(objReference, 'offsetTop') + objReference.offsetHeight + 'px';]]></code></eg-group></examples><resources><see-also><ulist><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://msdn.microsoft.com/en-us/library/bb250395(VS.85).aspx#cssenhancements_topic3">MSDN: Fix the Box Instead of Thinking Outside It</loc>
          </p></item></ulist></see-also></resources><related-techniques><relatedtech idref="C12"/><relatedtech idref="C14"/><relatedtech idref="C17"/><relatedtech idref="C20"/><relatedtech idref="C24"/><relatedtech idref="C26"/></related-techniques><tests><procedure><olist><item><p>文字サイズの変更とともにテキストコンテナのサイズを調整するように設計されているページを開く。</p></item><item><p>ブラウザの文字サイズ調節を使って200%のサイズまで大きくする。（ズーム機能は使用しない）</p></item><item><p>テキストコンテナのサイズが文字サイズに合わせて調整される。</p></item><item><p>文字サイズを大きくした結果、どの文字も「切り取られ」たり、見えなくなっていたりしない。</p></item></olist></procedure><expected-results><ulist><item><p>3.及び 4.を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR34.html">SCR34: Calculating size and position in a way that scales with text size&#xD;
（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.hitachi.co.jp/design/index.html">株式会社日立製作所デザイン本部</loc></item><item>日本語訳：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://jp.fujitsu.com">富士通株式会社</loc>,<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://jp.fujitsu.com/group/fdl/">富士通デザイン株式会社</loc></item></ulist></translationcredit></technique><technique id="SCR35"><short-name>アンカー及びボタンのonclickイベントを用いて、アクションをキーボードで操作可能にする</short-name><applicability><p>HTML又はXHTMLで使用されるスクリプト。</p></applicability><applies-to><success-criterion idref="keyboard-operation-keyboard-operable"/><success-criterion idref="keyboard-operation-all-funcs"/></applies-to><description><p>この実装方法の目的は、キーボードでアクセス可能なコントロールに加えることで、キーボードでアクセス可能になるスクリプトの関数を呼び出す方法について説明することである。スクリプトによる動きが確実にキーボードから呼び出されるように、それらの動きは「ネイティブに実行可能な」HTML要素（リンク及びボタン）に関連付けられている。これらの要素のonclickイベントは機器に依存していない。「onclick」という表現はマウスに関連付けられているようにも思えるが、onclickイベントは実際のところ、リンク又はボタンのデフォルトの動きにマッピングされている。デフォルトの動きは、利用者がマウスで要素をクリックしたときに発生するが、要素にフォーカスしてEnterキーやスペースキーを押したとき及び、他のアクセシビリティAPI によってトリガーされたときにも発生する。</p><p>この実装方法はクライアントサイドスクリプトに依存しているが、スクリプトが利用できない環境に対する、代替としての実装又は説明として意味がある。アンカー要素を使ってJavaScriptによるアクションを呼び出すとき、代替としての実装又は説明は<code><![CDATA[href]]></code>属性によって提供される。ボタンを使用するときは、フォームの送信によって提供される。</p></description><examples><eg-group><description><p>スクリプトを実行するリンクで、スクリプトをサポートしていないブラウザに対して代替手段を持たないもの。この方法は、スクリプトがアクセシビリティ・サポーテッドな技術に依存しているときのみに使用されるべきである。</p><p>このリンクからナビゲートしたくないのではあるが、これを実際のリンクにし、適切なイベントを得るために、<code><![CDATA[a]]></code>要素上のhref属性を使わなければならない。この事例では、我々は「#」をリンクターゲットとして使用しているが、何を使用しても良い。このリンクからナビゲートされることはない。</p><p>doStuff()イベントハンドリング関数の最後にある「return false;」は、ブラウザにそのURIへ移動しないよう指示している。それがなければ、ページはスクリプト実行後に再読み込みされることになる。</p></description><code><![CDATA[<script> 
function doStuff()
 {
  //do stuff
    return false;
  }
</script>
<a href="#" onclick="return doStuff();">do stuff</a>]]></code></eg-group><eg-group><description><p>スクリプトを実行するリンクであるが、スクリプトが実行可能でなければ他のページに移動させるもの。この方法はスクリプトに依存しないサイトで、移動先がスクリプトと同じ機能を提供している場合にのみ使用される。この例は、hrefが実在するページであるdostuff.htmに設定されていること以外は、事例 1と同じである。dostuff.htmでは、スクリプトと同じ機能を提供しなければならない。doStuff()イベントハンドリング関数の最後にある「return false;」が、ブラウザにそのURIへ移動しないように指示している。そうでなければ、ブラウザはスクリプト実行後にdostuff.htmに移動してしまう。</p></description><code><![CDATA[<script> 
function doStuff() 
 {  
  //do stuff  
  return false; 
 }
</script>
<a href="dostuff.htm" onclick="return doStuff();">do stuff</a>]]></code><description><p>このコードの実装サンプル：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/working-examples/SCR35/jslink.html">JavaScriptを用いてアクションリンクを作成</loc></p></description></eg-group><eg-group><description><p>スクリプトを実行して、かつスクリプトを使わない利用者のためにフォーム送信を代替とするボタン。このアプローチは、スクリプトに依存しないサイトで、フォームの送信がスクリプトと同じ機能を提供できる場合にのみ使用できる。onsubmit="return false;"はフォームから送信されるのを防ぐ。</p></description><code><![CDATA[<script>
  function doStuff()
 {
     //do stuff
 }
</script>
<form action="doStuff.aspx" onsubmit="return false;">
 <input type="submit" value="Do Stuff" onclick="doStuff();" />
</form>]]></code><description><p>このコードの実装サンプル：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/working-examples/SCR35/jsbutton.html">JavaScriptを用いてアクションボタンを作成</loc></p></description></eg-group><eg-group><description><p>スクリプトを実行するボタンで、<code><![CDATA[input type="image"]]></code>を用いて実装されているもの。<code><![CDATA[input]]></code>には、画像と等価のテキストを提供するために、タイトル属性を追加しなければならないことに注意する。この方法は、スクリプトに依存しているときのみに利用すべきである。</p></description><code><![CDATA[<script>
  function doStuff()
  {
     //do stuff
   return false;
  }
</script>
<input type="image" src="stuff.gif" title="Do stuff" onclick="return doStuff();" />]]></code></eg-group><eg-group><description><p>スクリプトを実行するボタンで、<code><![CDATA[input type="submit"]]></code>、<code><![CDATA[input type="reset"]]></code>又は<code><![CDATA[input type="button"]]></code>のいずれかを用いて実装されているもの。この方法は、スクリプトに依存しているときのみに利用すべきである。</p></description><code><![CDATA[<input type="submit" onclick="return doStuff();" value="Do Stuff" />]]></code></eg-group><eg-group><description><p>スクリプトを実行するボタンで、 <code><![CDATA[button]]></code>…<code><![CDATA[/button]]></code>を用いて実装されているもの。これは、ボタンの見た目をより詳細に調整したいときに有効である。この特定の例では、ボタンはアイコンとテキストの両方を含んでいる。この方法は、スクリプトに依存しているときのみに利用すべきである。 </p></description><code><![CDATA[<button onclick="return doStuff();">
 <img src="stuff.gif" alt="stuff icon">
 Do Stuff
</button>]]></code></eg-group></examples><resources><see-also><ulist><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/REC-html40/interact/scripts.html">HTML 4.01 Scripts</loc>
          </p></item><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/REC-html40/interact/forms.html">HTML 4.01 Forms</loc>
          </p></item><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/REC-html40/struct/links.html">HTML 4.01 Links</loc>
          </p></item><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/DOM/DOMTR">Document Object Model (DOM) Technical Reports</loc>
          </p></item></ulist></see-also></resources><related-techniques><relatedtech idref="G90"/><relatedtech idref="G108"/><relatedtech idref="H91"/><relatedtech idref="SCR20"/><relatedtech idref="SCR24"/><relatedtech idref="F42"/><relatedtech idref="F59"/></related-techniques><tests><procedure><p><code><![CDATA[a]]></code>、<code><![CDATA[button]]></code>、又は<code><![CDATA[input]]></code>要素と関連付けられたすべてのスクリプトのアクション：</p><olist><item><p>スクリプトをサポートするユーザーエージェントで：</p><ulist><item><p>マウスを用い、コントロールをクリックする。</p></item><item><p>スクリプトのアクションが正しく実行される。</p></item><item><p>もしコントロールがアンカー要素なら、アンカー要素の<code><![CDATA[href]]></code>属性のURIが呼び出されない。</p></item><item><p>キーボードでコントロールに移動したり、フォーカスを与えたりできる。</p></item><item><p>キーボードのフォーカスをコントロールにセットする。</p></item><item><p>Enterキーを押すことで、スクリプトのアクションを呼び出すことができる。</p></item><item><p>もしコントロールがアンカー要素なら、アンカー要素の<code><![CDATA[href]]></code>属性のURIが呼び出されない。</p></item></ulist></item><item><p>スクリプトをサポートしていないユーザーエージェントで：</p><ulist><item><p>マウスでコントロールをクリックする。</p></item><item><p>もしコントロールがアンカー要素なら、アンカー要素の<code><![CDATA[href]]></code>属性のURIが呼び出される。</p></item><item><p>キーボードでコントロールに移動したり、フォーカスを与えたりできる。</p></item><item><p>キーボードのフォーカスをコントロールにセットする。</p></item><item><p>もしコントロールがアンカー要素なら、Enterキーを押すことでアンカー要素の<code><![CDATA[href]]></code>属性のURIが呼び出される。</p></item></ulist></item></olist></procedure><expected-results><ulist><item><p>上記のチェックポイント全てを満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR35.html">SCR35: Making actions keyboard accessible by using the onclick event of anchors and buttons（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：辻 勝利（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp/">株式会社ミツエーリンクス</loc>）</item></ulist></translationcredit></technique><technique id="SCR36"><short-name>静的なウィンドウ又はエリアにある、動きのあるテキスト、スクロールするテキスト、又は自動更新されるテキストを利用者が表示できるメカニズムを提供する</short-name><applicability><p>動く、点滅する、又はテキストを更新し、静的なテキスト・ブロックを生成する全てのウェブコンテンツ技術</p></applicability><applies-to><success-criterion idref="time-limits-required-behaviors"/></applies-to><description><p>スペースが限られているために、スクロールするテキストを表示するウェブページがある。小さなテキストウィンドウの中でテキストをスクロールさせることにより、その速度にあわせて読むことができる利用者にはコンテンツが利用可能となるが、それよりも速度が読むのが遅い利用者や、支援技術の利用者にとっては問題となる。この実装方法では、動きを止めて、テキスト・ブロック全体を静的に利用可能にするメカニズムを提供する。テキストは別ウィンドウかページ中の（より大きな）セクションで利用可能になるだろう。そうすることで、利用者はテキストを自分の速度で読むことができる。</p><p>この実装方法は、動いているテキストが全て同時に画面に表示できない場合（例：長いチャットでの会話）には適用されない。</p><note><p class="prefix"><em>Note: </em>この実装方法は、不適合のコンテンツのための<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.ciaj.or.jp/access/web/docs/WCAG20/Overview.html#conforming-alternate-versiondef">適合している代替バージョン</loc>のページを表示するためのスタイルスイッチの実装方法とあわせて利用できる。詳細については、<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="C29.html">C29： スタイル・スイッチャーを用いて、適合している代替バージョンを提供する</loc> (CSS)及び<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.ciaj.or.jp/access/web/docs/UNDERSTANDING-WCAG20/conformance.html#uc-conforming-alt-versions-head">適合している代替バージョンを理解する</loc>を参照のこと。</p></note></description><examples><eg-group><head>スクロールするテキストを展開する</head><description><p>大きなテキスト・ブロックがページ中の小さなマーキーの範囲をスクロールする。ボタンにより、利用者はスクロールを止め、テキスト・ブロック全体を表示することができる。</p><note><p class="prefix">このコード例ではCSSとJavaScriptの両方が利用可能で有効になっている必要がある。 </p></note><p>CSS部分：</p></description><code><![CDATA[#scrollContainer {
        visibility: visible;
        overflow: hidden;
        top: 50px; left: 10px;
        background-color: darkblue;
      }
      .scrolling {
        position: absolute;
        width: 200px;
        height: 50px;
      }
      .notscrolling {
        width: 500px;
        margin:10px;
      }
      #scrollingText {
        top: 0px;
        color: white;
      }
      .scrolling #scrollingText {
        position: absolute;
      }
      </a>]]></code><description><p>スクリプト及びHTMLコンテンツ：</p></description><code><![CDATA[<script type="text/javascript">

      var tid;
      function init() {
        var st = document.getElementById('scrollingText');
        st.style.top = '0px';
        initScrolling();
      }
      function initScrolling () {
        tid = setInterval('scrollText()', 300);
      }
      function scrollText () {
        var st = document.getElementById('scrollingText');
        if (parseInt(st.style.top) > (st.offsetHeight*(-1) + 8)) {
          st.style.top = (parseInt(st.style.top) - 5) + 'px';
        } else {
          var sc = document.getElementById('scrollContainer');
          st.style.top = parseInt(sc.offsetHeight) + 8 + 'px';
        }
      }
      function toggle() {
        var scr = document.getElementById('scrollContainer');
        if (scr.className == 'scrolling') {
          scr.className = 'notscrolling';
          clearInterval(tid);
           document.getElementById('scrollButton').value="格納";
        } else {
          scr.className = 'scrolling';
          initScrolling();
          document.getElementById('scrollButton').value="展開";
        }
      }
  <input type="button" id="scrollButton" value="展開" onclick="toggle()" />
  <div id="scrollContainer" class="scrolling">
    <div id="scrollingText" class="on">
    .... スクロールするテキスト ...
    </div>
  </div>
...]]></code><description><p>このコードの実装サンプル：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/working-examples/SCR36/scrolltext.html">スクロールするテキストを展開</loc></p></description></eg-group></examples><resources/><related-techniques><relatedtech idref="G4"/><relatedtech idref="G187"/><relatedtech idref="SCR33"/><relatedtech idref="SCR22"/></related-techniques><tests><procedure><p>この実装方法についての検証項目はない。</p></procedure><expected-results/></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR36.html">SCR36: Providing a mechanism to allow users to display moving, scrolling, or auto-updating text in a static window or area（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：中村 精親（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp/">株式会社ミツエーリンクス</loc>）</item></ulist></translationcredit></technique><technique id="SCR37"><short-name>デバイス非依存な方法でカスタム・ダイアログを作成する</short-name><applicability><p>スクリプトで使用されるHTML及びXHTML</p></applicability><applies-to><success-criterion idref="navigation-mechanisms-focus-order"/></applies-to><description><p>コンテンツ制作者はしばしば、ブラウザによって提供されるポップアップウインドウを使わずに、独自のダイアログを作成したがる。これは通常、ダイアログのコンテンツを<code><![CDATA[div]]></code>の中に収めて、その<code><![CDATA[div]]></code>をコンテンツの上にCSSによる重なり順及び絶対配置を用いて配置するというやり方でおこなわれる。</p><p>これらのダイアログをアクセシブルにするには、いくつかの簡単なルールに従う必要がある。</p><olist><item><p>リンクやボタンの<code><![CDATA[onclick]]></code>イベントからダイアログを起動するスクリプトをトリガーにする。</p></item><item><p>ダイアログの<code><![CDATA[div]]></code>をDocument Object Model (DOM) の中、トリガーした要素の直後に配置する。トリガーした要素がフォーカスを保持し、ダイアログのコンテンツをその要素のあとに挿入することで、ダイアログの中のコンテンツがスクリーンリーダーの読み上げ順序で次になり、タブ順序も次になる。それでも、ダイアログは視覚的にページ上のあらゆる場所に絶対配置できる。これは、下の例のようにダイアログをHTMLの中で作成し、CSSで非表示にする方法又は、トリガーした要素の直後にスクリプトで挿入する方法のどちらでも実装できる。</p></item><item><p>ダイアログのdiv内部のHTMLが、その他のコンテンツと同じアクセシビリティガイドラインの要件を満たしていることを保証する。</p></item></olist><p>リンクがダイアログを開閉できたり、キーボードのフォーカスが外れるとダイアログが閉じるようにしたりすることはすばらしいが、必ずしも必要なわけではない。</p></description><examples><eg-group><head>ダイアログを開くオプションボタン</head><description><p>この例のHTMLには、トリガーとなる要素、この場合はボタンとダイアログのフレームとして機能するdivがある。</p><p>トリガーとなる要素はボタンで、スクリプトはonclickイベントのトリガーである。これは適切なイベントをオペレーティングシステムに送るので、支援技術はDOMの中の変化に気がつくことができる。</p><p>この例では、ダイアログ内の送信及びリセットボタンは単純に<code><![CDATA[div]]></code>に隠れている。</p></description><code><![CDATA[...
<button onclick="TogglePopup(event,true)"
	name="pop0001">オプション</button>

<div class="popover" id="pop0001">
  <h3>並べ替えの情報を編集</h3>
  <form action="default.htm" onsubmit="this.parentNode.style.display='none'; return false;" onreset="this.parentNode.style.display='none'; return false;">
    <fieldset>
      <legend>並び順</legend> 
      <input type="radio" name="order" id="order_alpha" /><label for="order_alpha">アルファベット順</label>
      <input type="radio" name="order" id="order_default" checked="true" /><label for="order_default"&gt既定</label>
    </fieldset>
<div class="buttons">
  <input type="submit" value="OK" />
  <input type="reset" value="キャンセル" />
</div>
</form>

</div>
...]]></code><description><p><code><![CDATA[div]]></code>、見出し、及び<code><![CDATA[form]]></code>要素はCSSでダイアログに見えるようにスタイル付けされている。</p></description><code><![CDATA[...
a { color:blue; }
a.clickPopup img { border:none; width:0; }

div.popover { position:absolute; display:none; border:1px outset; background-color:beige; font-size:80%; background-color:#eeeeee; color:black; }
div.popover h3 { margin:0; padding:0.1em 0.5em; background-color:navy; color:white; }
#pop0001 { width:20em; }
#pop0001 form { margin:0; padding:0.5em; }
#pop0001 fieldset { margin-bottom:0.3em; padding-bottom:0.5em; }
#pop0001 input, #pop0001 label { vertical-align:middle; }
#pop0001 div.buttons { text-align:right; }
#pop0001 div.buttons input { width:6em; }
...]]></code><description><p>スクリプトはポップアップする<code><![CDATA[div]]></code>の表示を切り替え、表示させたり隠したりする。</p></description><code><![CDATA[...
function TogglePopup(evt,show)
{
	HarmonizeEvent(evt);
	var src = evt.target;
	if ("click" == evt.type)
	{
		evt.returnValue = false;
	}
	var popID = src.getAttribute("name");
	if (popID)
	{
		var popup = document.getElementById(popID);
		if (popup)
		{
			if (true == show)
			{
				popup.style.display = "block";
			}
			else if (false == show)
			{
				popup.style.display = "none";
			}
			else
			{
				popup.style.display = "block" == popup.style.display ? "none" : "block";
			}
			if ("block" == popup.style.display)
			{
				//window.alert(document.documentElement.scrollHeight);
				popup.style.top = ((document.documentElement.offsetHeight - popup.offsetHeight) / 2 ) + 'px';
				popup.style.left = ((document.documentElement.offsetWidth - popup.offsetWidth) / 2) + 'px';
			}
		}
	}
}

function SubmitForm(elem)
{ 
	elem.parentNode.style.display='none'; 
	return false;
}

function ResetForm(elem)
{ 
	elem.parentNode.style.display='none'; 
	return false;
}
...]]></code><description><p>このコードの実装サンプル：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/working-examples/SCR37/default.htm">ダイアログを開くオプションボタン</loc></p></description></eg-group></examples><resources><see-also><ulist><item><p><loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w4a.info/2007/prog/8-shelly.pdf">W4A Paper: Accessibility for Simple to Moderate-Complexity DHTML Web Sites</loc>by Cynthia C. Shelly and George Young, Microsoft Corporation. (PDF Format)</p></item><item><p>Microsoft Developer Network Whitepaper:<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://download.microsoft.com/download/0/f/5/0f5e941c-c495-401a-9031-eab8315da35e/writing_accessible_web_applications.doc">Writing Accessible Web Applications</loc>by Cynthia C. Shelly and George Young. (Microsoft Word Format)</p></item><item><p><loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://msdn.microsoft.com/en-us/library/ms695716.aspx">Microsoft Active Accessibility 2.0 SDK</loc>. Includes Inspect32.exe and other MSAA tools.</p></item><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://msdn.microsoft.com/en-us/library/windows/desktop/dd318521%28v=vs.85%29.aspx">Instructions for the Inspect tool</loc>
          </p></item><item><p>
            <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.eramp.com/david/name-role-value-using-inspect.htm">Using the Inspect tool to find name Name, Role and Value for Javascript</loc>
          </p></item><item><p><loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.microsoft.com/download/en/details.aspx?id=18359">Microsoft Internet Explorer Developer Toolbar.</loc>. Allows examination of script-generated DOM in Microsoft Internet Explorer</p></item><item><p><loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://getfirebug.com/">Firebug</loc>. Allows examination of script-generated DOM in Firefox.</p></item></ulist></see-also></resources><related-techniques><relatedtech idref="SCR26"/><relatedtech idref="G59"/></related-techniques><tests><procedure><olist><item><p>ページ内のすべての場所から、ダイアログのトリガーとなるもので、ポップアップウインドウでないものを探す。</p></item><item><p>Tabキーでその場所に移動してEnterキーを押下することで、ダイアログを開くことができる。</p></item><item><p>開いたら、タブ順序でダイアログが次の位置にある。</p></item><item><p>ダイアログがボタン又はリンクのクリックイベントによってトリガーされている。</p></item><item><p>スクリプトによって生成されたDOMを検証できるツールを用いて、DOM内でダイアログが次にある。</p></item></olist></procedure><expected-results><ulist><item><p>2., 3., 4.及び5.を満たしている。</p></item></ulist></expected-results></tests><translationcredit><ulist><item>原文：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20-TECHS/SCR37.html">SCR37: Creating Custom Dialogs in a Device Independent Way（英語）</loc></item><item>日本語訳監修：<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</loc></item><item>日本語訳：辻 勝利（<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.mitsue.co.jp/">株式会社ミツエーリンクス</loc>）</item><item>修正：2012年4月25日（情報通信アクセス協議会「<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.ciaj.or.jp/access/web/activities/wg2/">ウェブアクセシビリティ基盤委員会（WAIC） 実装ワーキンググループ（WG2）</loc>」）</item></ulist></translationcredit></technique></div1></body><back><div1 id="placeholders"><!-- note: this can be updated using /misc/id-list.xslt (requires cut and paste)--><head/><p id="UNKNOWN">place holder for idref</p><p id="cc1">placeholder for cc1</p><p id="cc2">placeholder for cc2</p><p id="cc3">placeholder for cc3</p><p id="cc4">placeholder for cc4</p><p id="cc5">placeholder for cc5</p><p id="text-equiv">placeholder for text-equiv</p><p id="text-equiv-all">placeholder for text-equiv-all</p><p id="media-equiv">placeholder for media-equiv</p><p id="media-equiv-av-only-alt">placeholder for media-equiv-av-only-alt</p><p id="media-equiv-captions">placeholder for media-equiv-captions</p><p id="media-equiv-audio-desc">placeholder for media-equiv-audio-desc</p><p id="media-equiv-real-time-captions">placeholder for media-equiv-real-time-captions</p><p id="media-equiv-audio-desc-only">placeholder for media-equiv-audio-desc-only</p><p id="media-equiv-sign">placeholder for media-equiv-sign</p><p id="media-equiv-extended-ad">placeholder for media-equiv-extended-ad</p><p id="media-equiv-text-doc">placeholder for media-equiv-text-doc</p><p id="media-equiv-live-audio-only">placeholder for media-equiv-live-audio-only</p><p id="content-structure-separation">placeholder for content-structure-separation</p><p id="content-structure-separation-programmatic">placeholder for content-structure-separation-programmatic</p><p id="content-structure-separation-sequence">placeholder for content-structure-separation-sequence</p><p id="content-structure-separation-understanding">placeholder for content-structure-separation-understanding</p><p id="visual-audio-contrast">placeholder for visual-audio-contrast</p><p id="visual-audio-contrast-without-color">placeholder for visual-audio-contrast-without-color</p><p id="visual-audio-contrast-dis-audio">placeholder for visual-audio-contrast-dis-audio</p><p id="visual-audio-contrast-contrast">placeholder for visual-audio-contrast-contrast</p><p id="visual-audio-contrast-scale">placeholder for visual-audio-contrast-scale</p><p id="visual-audio-contrast-text-presentation">placeholder for visual-audio-contrast-text-presentation</p><p id="visual-audio-contrast7">placeholder for visual-audio-contrast7</p><p id="visual-audio-contrast-noaudio">placeholder for visual-audio-contrast-noaudio</p><p id="visual-audio-contrast-visual-presentation">placeholder for visual-audio-contrast-visual-presentation</p><p id="visual-audio-contrast-text-images">placeholder for visual-audio-contrast-text-images</p><p id="keyboard-operation">placeholder for keyboard-operation</p><p id="keyboard-operation-keyboard-operable">placeholder for keyboard-operation-keyboard-operable</p><p id="keyboard-operation-trapping">placeholder for keyboard-operation-trapping</p><p id="keyboard-operation-all-funcs">placeholder for keyboard-operation-all-funcs</p><p id="time-limits">placeholder for time-limits</p><p id="time-limits-required-behaviors">placeholder for time-limits-required-behaviors</p><p id="time-limits-pause">placeholder for time-limits-pause</p><p id="time-limits-no-exceptions">placeholder for time-limits-no-exceptions</p><p id="time-limits-postponed">placeholder for time-limits-postponed</p><p id="time-limits-server-timeout">placeholder for time-limits-server-timeout</p><p id="seizure">placeholder for seizure</p><p id="seizure-does-not-violate">placeholder for seizure-does-not-violate</p><p id="seizure-three-times">placeholder for seizure-three-times</p><p id="navigation-mechanisms">placeholder for navigation-mechanisms</p><p id="navigation-mechanisms-skip">placeholder for navigation-mechanisms-skip</p><p id="navigation-mechanisms-title">placeholder for navigation-mechanisms-title</p><p id="navigation-mechanisms-focus-order">placeholder for navigation-mechanisms-focus-order</p><p id="navigation-mechanisms-refs">placeholder for navigation-mechanisms-refs</p><p id="navigation-mechanisms-mult-loc">placeholder for navigation-mechanisms-mult-loc</p><p id="navigation-mechanisms-descriptive">placeholder for navigation-mechanisms-descriptive</p><p id="navigation-mechanisms-focus-visible">placeholder for navigation-mechanisms-focus-visible</p><p id="navigation-mechanisms-location">placeholder for navigation-mechanisms-location</p><p id="navigation-mechanisms-link">placeholder for navigation-mechanisms-link</p><p id="navigation-mechanisms-headings">placeholder for navigation-mechanisms-headings</p><p id="meaning">placeholder for meaning</p><p id="meaning-doc-lang-id">placeholder for meaning-doc-lang-id</p><p id="meaning-other-lang-id">placeholder for meaning-other-lang-id</p><p id="meaning-idioms">placeholder for meaning-idioms</p><p id="meaning-located">placeholder for meaning-located</p><p id="meaning-supplements">placeholder for meaning-supplements</p><p id="meaning-pronunciation">placeholder for meaning-pronunciation</p><p id="consistent-behavior">placeholder for consistent-behavior</p><p id="consistent-behavior-receive-focus">placeholder for consistent-behavior-receive-focus</p><p id="consistent-behavior-unpredictable-change">placeholder for consistent-behavior-unpredictable-change</p><p id="consistent-behavior-consistent-locations">placeholder for consistent-behavior-consistent-locations</p><p id="consistent-behavior-consistent-functionality">placeholder for consistent-behavior-consistent-functionality</p><p id="consistent-behavior-no-extreme-changes-context">placeholder for consistent-behavior-no-extreme-changes-context</p><p id="minimize-error">placeholder for minimize-error</p><p id="minimize-error-identified">placeholder for minimize-error-identified</p><p id="minimize-error-cues">placeholder for minimize-error-cues</p><p id="minimize-error-suggestions">placeholder for minimize-error-suggestions</p><p id="minimize-error-reversible">placeholder for minimize-error-reversible</p><p id="minimize-error-context-help">placeholder for minimize-error-context-help</p><p id="minimize-error-reversible-all">placeholder for minimize-error-reversible-all</p><p id="ensure-compat">placeholder for ensure-compat</p><p id="ensure-compat-parses">placeholder for ensure-compat-parses</p><p id="ensure-compat-rsv">placeholder for ensure-compat-rsv</p><p id="G1">placeholder for G1</p><p id="G4">placeholder for G4</p><p id="G5">placeholder for G5</p><p id="G8">placeholder for G8</p><p id="G9">placeholder for G9</p><p id="G10">placeholder for G10</p><p id="G11">placeholder for G11</p><p id="G13">placeholder for G13</p><p id="G14">placeholder for G14</p><p id="G15">placeholder for G15</p><p id="G17">placeholder for G17</p><p id="G18">placeholder for G18</p><p id="G19">placeholder for G19</p><p id="G21">placeholder for G21</p><p id="G53">placeholder for G53</p><p id="G54">placeholder for G54</p><p id="G55">placeholder for G55</p><p id="G56">placeholder for G56</p><p id="G57">placeholder for G57</p><p id="G58">placeholder for G58</p><p id="G59">placeholder for G59</p><p id="G60">placeholder for G60</p><p id="G61">placeholder for G61</p><p id="G62">placeholder for G62</p><p id="G63">placeholder for G63</p><p id="G64">placeholder for G64</p><p id="G65">placeholder for G65</p><p id="G68">placeholder for G68</p><p id="G69">placeholder for G69</p><p id="G70">placeholder for G70</p><p id="G71">placeholder for G71</p><p id="G73">placeholder for G73</p><p id="G74">placeholder for G74</p><p id="G75">placeholder for G75</p><p id="G76">placeholder for G76</p><p id="G78">placeholder for G78</p><p id="G79">placeholder for G79</p><p id="G80">placeholder for G80</p><p id="G81">placeholder for G81</p><p id="G82">placeholder for G82</p><p id="G83">placeholder for G83</p><p id="G84">placeholder for G84</p><p id="G85">placeholder for G85</p><p id="G86">placeholder for G86</p><p id="G87">placeholder for G87</p><p id="G88">placeholder for G88</p><p id="G89">placeholder for G89</p><p id="G90">placeholder for G90</p><p id="G91">placeholder for G91</p><p id="G92">placeholder for G92</p><p id="G93">placeholder for G93</p><p id="G94">placeholder for G94</p><p id="G95">placeholder for G95</p><p id="G96">placeholder for G96</p><p id="G97">placeholder for G97</p><p id="G98">placeholder for G98</p><p id="G99">placeholder for G99</p><p id="G100">placeholder for G100</p><p id="G101">placeholder for G101</p><p id="G102">placeholder for G102</p><p id="G103">placeholder for G103</p><p id="G105">placeholder for G105</p><p id="G107">placeholder for G107</p><p id="G108">placeholder for G108</p><p id="G110">placeholder for G110</p><p id="G111">placeholder for G111</p><p id="G112">placeholder for G112</p><p id="G115">placeholder for G115</p><p id="G117">placeholder for G117</p><p id="G120">placeholder for G120</p><p id="G121">placeholder for G121</p><p id="G122">placeholder for G122</p><p id="G123">placeholder for G123</p><p id="G124">placeholder for G124</p><p id="G125">placeholder for G125</p><p id="G126">placeholder for G126</p><p id="G127">placeholder for G127</p><p id="G128">placeholder for G128</p><p id="G130">placeholder for G130</p><p id="G131">placeholder for G131</p><p id="G133">placeholder for G133</p><p id="G134">placeholder for G134</p><p id="G135">placeholder for G135</p><p id="G136">placeholder for G136</p><p id="G138">placeholder for G138</p><p id="G139">placeholder for G139</p><p id="G140">placeholder for G140</p><p id="G141">placeholder for G141</p><p id="G142">placeholder for G142</p><p id="G143">placeholder for G143</p><p id="G144">placeholder for G144</p><p id="G145">placeholder for G145</p><p id="G146">placeholder for G146</p><p id="G147">placeholder for G147</p><p id="G148">placeholder for G148</p><p id="G149">placeholder for G149</p><p id="G150">placeholder for G150</p><p id="G151">placeholder for G151</p><p id="G152">placeholder for G152</p><p id="G153">placeholder for G153</p><p id="G155">placeholder for G155</p><p id="G156">placeholder for G156</p><p id="G157">placeholder for G157</p><p id="G158">placeholder for G158</p><p id="G159">placeholder for G159</p><p id="G160">placeholder for G160</p><p id="G161">placeholder for G161</p><p id="G162">placeholder for G162</p><p id="G163">placeholder for G163</p><p id="G164">placeholder for G164</p><p id="G165">placeholder for G165</p><p id="G166">placeholder for G166</p><p id="G167">placeholder for G167</p><p id="G168">placeholder for G168</p><p id="G169">placeholder for G169</p><p id="G170">placeholder for G170</p><p id="G171">placeholder for G171</p><p id="G172">placeholder for G172</p><p id="G173">placeholder for G173</p><p id="G174">placeholder for G174</p><p id="G175">placeholder for G175</p><p id="G176">placeholder for G176</p><p id="G177">placeholder for G177</p><p id="G178">placeholder for G178</p><p id="G179">placeholder for G179</p><p id="G180">placeholder for G180</p><p id="G181">placeholder for G181</p><p id="G182">placeholder for G182</p><p id="G183">placeholder for G183</p><p id="G184">placeholder for G184</p><p id="G185">placeholder for G185</p><p id="G186">placeholder for G186</p><p id="G187">placeholder for G187</p><p id="G188">placeholder for G188</p><p id="G189">placeholder for G189</p><p id="G190">placeholder for G190</p><p id="G191">placeholder for G191</p><p id="G192">placeholder for G192</p><p id="G193">placeholder for G193</p><p id="G194">placeholder for G194</p><p id="G195">placeholder for G195</p><p id="G196">placeholder for G196</p><p id="G197">placeholder for G197</p><p id="G198">placeholder for G198</p><p id="H2">placeholder for H2</p><p id="H4">placeholder for H4</p><p id="H24">placeholder for H24</p><p id="H25">placeholder for H25</p><p id="H27">placeholder for H27</p><p id="H28">placeholder for H28</p><p id="H30">placeholder for H30</p><p id="H32">placeholder for H32</p><p id="H33">placeholder for H33</p><p id="H34">placeholder for H34</p><p id="H35">placeholder for H35</p><p id="H36">placeholder for H36</p><p id="H37">placeholder for H37</p><p id="H39">placeholder for H39</p><p id="H40">placeholder for H40</p><p id="H42">placeholder for H42</p><p id="H43">placeholder for H43</p><p id="H44">placeholder for H44</p><p id="H45">placeholder for H45</p><p id="H46">placeholder for H46</p><p id="H48">placeholder for H48</p><p id="H49">placeholder for H49</p><p id="H50">placeholder for H50</p><p id="H51">placeholder for H51</p><p id="H53">placeholder for H53</p><p id="H54">placeholder for H54</p><p id="H56">placeholder for H56</p><p id="H57">placeholder for H57</p><p id="H58">placeholder for H58</p><p id="H59">placeholder for H59</p><p id="H60">placeholder for H60</p><p id="H62">placeholder for H62</p><p id="H63">placeholder for H63</p><p id="H64">placeholder for H64</p><p id="H65">placeholder for H65</p><p id="H67">placeholder for H67</p><p id="H69">placeholder for H69</p><p id="H70">placeholder for H70</p><p id="H71">placeholder for H71</p><p id="H73">placeholder for H73</p><p id="H74">placeholder for H74</p><p id="H75">placeholder for H75</p><p id="H76">placeholder for H76</p><p id="H77">placeholder for H77</p><p id="H78">placeholder for H78</p><p id="H79">placeholder for H79</p><p id="H80">placeholder for H80</p><p id="H81">placeholder for H81</p><p id="H82">placeholder for H82</p><p id="H83">placeholder for H83</p><p id="H84">placeholder for H84</p><p id="H85">placeholder for H85</p><p id="H86">placeholder for H86</p><p id="H87">placeholder for H87</p><p id="H88">placeholder for H88</p><p id="H89">placeholder for H89</p><p id="H90">placeholder for H90</p><p id="H91">placeholder for H91</p><p id="C6">placeholder for C6</p><p id="C7">placeholder for C7</p><p id="C8">placeholder for C8</p><p id="C9">placeholder for C9</p><p id="C12">placeholder for C12</p><p id="C13">placeholder for C13</p><p id="C14">placeholder for C14</p><p id="C15">placeholder for C15</p><p id="C16">placeholder for C16</p><p id="C17">placeholder for C17</p><p id="C18">placeholder for C18</p><p id="C19">placeholder for C19</p><p id="C20">placeholder for C20</p><p id="C21">placeholder for C21</p><p id="C22">placeholder for C22</p><p id="C23">placeholder for C23</p><p id="C24">placeholder for C24</p><p id="C25">placeholder for C25</p><p id="C26">placeholder for C26</p><p id="C27">placeholder for C27</p><p id="C28">placeholder for C28</p><p id="C29">placeholder for C29</p><p id="C30">placeholder for C30</p><p id="SVR1">placeholder for SVR1</p><p id="SVR2">placeholder for SVR2</p><p id="SVR3">placeholder for SVR3</p><p id="SVR4">placeholder for SVR4</p><p id="SM1">placeholder for SM1</p><p id="SM2">placeholder for SM2</p><p id="SM6">placeholder for SM6</p><p id="SM7">placeholder for SM7</p><p id="SM11">placeholder for SM11</p><p id="SM12">placeholder for SM12</p><p id="SM13">placeholder for SM13</p><p id="SM14">placeholder for SM14</p><p id="T1">placeholder for T1</p><p id="T2">placeholder for T2</p><p id="T3">placeholder for T3</p><p id="ARIA1">placeholder for ARIA1</p><p id="ARIA2">placeholder for ARIA2</p><p id="ARIA3">placeholder for ARIA3</p><p id="ARIA4">placeholder for ARIA4</p><p id="F1">placeholder for F1</p><p id="F2">placeholder for F2</p><p id="F3">placeholder for F3</p><p id="F4">placeholder for F4</p><p id="F7">placeholder for F7</p><p id="F8">placeholder for F8</p><p id="F9">placeholder for F9</p><p id="F10">placeholder for F10</p><p id="F12">placeholder for F12</p><p id="F13">placeholder for F13</p><p id="F14">placeholder for F14</p><p id="F15">placeholder for F15</p><p id="F16">placeholder for F16</p><p id="F17">placeholder for F17</p><p id="F19">placeholder for F19</p><p id="F20">placeholder for F20</p><p id="F22">placeholder for F22</p><p id="F23">placeholder for F23</p><p id="F24">placeholder for F24</p><p id="F25">placeholder for F25</p><p id="F26">placeholder for F26</p><p id="F30">placeholder for F30</p><p id="F31">placeholder for F31</p><p id="F32">placeholder for F32</p><p id="F33">placeholder for F33</p><p id="F34">placeholder for F34</p><p id="F36">placeholder for F36</p><p id="F37">placeholder for F37</p><p id="F38">placeholder for F38</p><p id="F39">placeholder for F39</p><p id="F40">placeholder for F40</p><p id="F41">placeholder for F41</p><p id="F42">placeholder for F42</p><p id="F43">placeholder for F43</p><p id="F44">placeholder for F44</p><p id="F46">placeholder for F46</p><p id="F47">placeholder for F47</p><p id="F48">placeholder for F48</p><p id="F49">placeholder for F49</p><p id="F50">placeholder for F50</p><p id="F52">placeholder for F52</p><p id="F54">placeholder for F54</p><p id="F55">placeholder for F55</p><p id="F58">placeholder for F58</p><p id="F59">placeholder for F59</p><p id="F60">placeholder for F60</p><p id="F61">placeholder for F61</p><p id="F62">placeholder for F62</p><p id="F63">placeholder for F63</p><p id="F65">placeholder for F65</p><p id="F66">placeholder for F66</p><p id="F67">placeholder for F67</p><p id="F68">placeholder for F68</p><p id="F69">placeholder for F69</p><p id="F70">placeholder for F70</p><p id="F71">placeholder for F71</p><p id="F72">placeholder for F72</p><p id="F73">placeholder for F73</p><p id="F74">placeholder for F74</p><p id="F75">placeholder for F75</p><p id="F76">placeholder for F76</p><p id="F77">placeholder for F77</p><p id="F78">placeholder for F78</p><p id="F79">placeholder for F79</p><p id="F80">placeholder for F80</p><p id="F81">placeholder for F81</p><p id="F82">placeholder for F82</p><p id="F83">placeholder for F83</p><p id="F84">placeholder for F84</p><p id="F85">placeholder for F85</p><p id="F86">placeholder for F86</p><p id="F87">placeholder for F87</p><p id="F88">placeholder for F88</p><p id="F89">placeholder for F89</p></div1></back></spec>